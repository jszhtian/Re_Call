#include "stdio.h"
#include <windows.h>
unsigned char xorTable[256] = {
    0xD8, 0x29, 0xB9, 0x16, 0x3D, 0x1A, 0x76, 0xD0, 0x87, 0x9B, 0x2D, 0x0C, 0x7B, 0xD1, 0xA9, 0x19, 
    0x22, 0x9F, 0x91, 0x73, 0x6A, 0x35, 0xB1, 0x7E, 0xD1, 0xB5, 0xE7, 0xE6, 0xD5, 0xF5, 0x06, 0xD6, 
    0xBA, 0xBF, 0xF3, 0x45, 0x3F, 0xF1, 0x61, 0xDD, 0x4C, 0x67, 0x6A, 0x6F, 0x74, 0xEC, 0x7A, 0x6F, 
    0x26, 0x74, 0x0E, 0xDB, 0x27, 0x4C, 0xA5, 0xF1, 0x0E, 0x2D, 0x70, 0xC4, 0x40, 0x5D, 0x4F, 0xDA, 
    0x9E, 0xC5, 0x49, 0x7B, 0xBD, 0xE8, 0xDF, 0xEE, 0xCA, 0xF4, 0x92, 0xDE, 0xE4, 0x76, 0x10, 0xDD, 
    0x2A, 0x52, 0xDC, 0x73, 0x4E, 0x54, 0x8C, 0x30, 0x3D, 0x9A, 0xB2, 0x9B, 0xB8, 0x93, 0x29, 0x55, 
    0xFA, 0x7A, 0xC9, 0xDA, 0x10, 0x97, 0xE5, 0xB6, 0x23, 0x02, 0xDD, 0x38, 0x4C, 0x9B, 0x1F, 0x9A, 
    0xD5, 0x49, 0xE9, 0x34, 0x0F, 0x28, 0x2D, 0x1B, 0x52, 0x39, 0x5C, 0x36, 0x89, 0x56, 0xA7, 0x96, 
    0x14, 0xBE, 0x2E, 0xC5, 0x3E, 0x08, 0x5F, 0x47, 0xA9, 0xDF, 0x88, 0x9F, 0xD4, 0xCC, 0x69, 0x1F, 
    0x30, 0x9F, 0xE7, 0xCD, 0x80, 0x45, 0xF3, 0xE7, 0x2A, 0x1D, 0x16, 0xB2, 0xF1, 0x54, 0xC8, 0x6C, 
    0x2B, 0x0D, 0xD4, 0x65, 0xF7, 0xE3, 0x36, 0xD4, 0xA5, 0x3B, 0xD1, 0x79, 0x4C, 0x54, 0xF0, 0x2A, 
    0xB4, 0xB2, 0x56, 0x45, 0x2E, 0xAB, 0x7B, 0x88, 0xC5, 0xFA, 0x74, 0xAD, 0x03, 0xB8, 0x9E, 0xD5, 
    0xF5, 0x6F, 0xDC, 0xFA, 0x44, 0x49, 0x31, 0xF6, 0x83, 0x32, 0xFF, 0xC2, 0xB1, 0xE9, 0xE1, 0x98, 
    0x3D, 0x6F, 0x31, 0x0D, 0xAC, 0xB1, 0x08, 0x83, 0x9D, 0x0D, 0x10, 0xD1, 0x41, 0xF9, 0x00, 0xBA, 
    0x1A, 0xCF, 0x13, 0x71, 0xE4, 0x86, 0x21, 0x2F, 0x23, 0x65, 0xC3, 0x45, 0xA0, 0xC3, 0x92, 0x48, 
    0x9D, 0xEA, 0xDD, 0x31, 0x2C, 0xE9, 0xE2, 0x10, 0x22, 0xAA, 0xE1, 0xAD, 0x2C, 0xC4, 0x2D, 0x7F
};

typedef struct BufferData 
{
    BYTE ctlFlag;
    char lpDst[16];
};

#define SaveCtlFlag(x,pos) x|=(1<<((pos)-1))
#define EncData(offset,size) ((offset)<<4)|((size)-2)

int main(int argc, char* argv[])
{   
    printf("[X'moe Project 2014,SiglusEngine Tools]\n");
    printf("An application to encode Gameexe.dat\n");
    printf("Version 0.1 For Rewrite Trial Version\n");
    printf("Usage : GameexeEnc Gameeexe.txt\n");
    FILE *fin=fopen(argv[1],"rb");
    if (fin == NULL){
	    printf("[Fatal Error] Error to Open file [%s]\n",argv[1]);
	    exit(1);
    }
    fseek(fin,0,SEEK_END);
    DWORD dwFileSize=ftell(fin);
    rewind(fin);
    fseek(fin,2,SEEK_SET);
    static char *pFile=new char [dwFileSize];
    memset(pFile,0,dwFileSize);
    fread(pFile,dwFileSize,1,fin);
    fclose(fin);
    //Copy file to your memory. 
    
    char *pBuffer=new char [dwFileSize+4*sizeof(DWORD)];
    memset(pBuffer,0,dwFileSize+4*sizeof(DWORD));
    char *pPoint=pFile;//=pBuffer+4*sizeof(DWORD);
    static char *pDataStart=pBuffer+4*sizeof(DWORD);
    char *pCurEnc=pDataStart;
    static char *pEndFile=pFile+dwFileSize;
    BufferData pEncoding;int iUsed=0,iEnc=0;
    memset(&pEncoding,0,sizeof(BufferData));
    while(pPoint<=pEndFile)
    {
        char *pPos=pPoint;BOOL bNotProcess=true;
        while(pPos>pFile&&pPoint-pPos<=0xFFF)
        {
            pPos--;//搜索前一个字符集合
            for (int i=0;i<17;i++)//0xF+2=17个
            {
                if (i==16&&bNotProcess)//只剩下一个了
                {
                    pEncoding.lpDst[iUsed++]=*(pPoint-1);
                    SaveCtlFlag(pEncoding.ctlFlag,iUsed-iEnc);
                    bNotProcess=FALSE;
                    printf("Copied 1 Byte\n");
                    break;
                }
                else if (!memcmp(pPos,pPoint,17-i)&&i<=15)//发现重复的
                {
                    *(WORD *)&pEncoding.lpDst[iUsed]=(WORD)EncData(pPoint-pPos,17-i);
                    iUsed+=2;iEnc++;
                    pPoint+=(17-i);
                    bNotProcess=FALSE;
                    printf("Encoded %d Bytes\n",17-i);
                    break;
                }
            }
            if (iUsed-iEnc==8)
            {
                memcpy(pCurEnc,&pEncoding,iUsed+1);
                memset(&pEncoding,0,sizeof(BufferData));
                pCurEnc+=(iUsed+1);
                //    printf("Encoded size:%d\n",pCurEnc-pDataStart);
                printf("Encoded size:%d\n",pPoint-pFile);
                iUsed=0;iEnc=0;
            }
        }
        pPoint++;//指向下一个即将进行匹配搜索的字符
    }
    *(PDWORD)(pBuffer+2*sizeof(DWORD))=pCurEnc-pDataStart;//encoded data size
    *(PDWORD)(pBuffer+3*sizeof(DWORD))=dwFileSize-2;//decoded data size
    char *lpByte=pBuffer+2*sizeof(DWORD);
    int iPos=0;

    FILE *fout=fopen("Gameexe.dat","wb");
    fwrite(pBuffer,pCurEnc-pDataStart,1,fout);
    fclose(fout);
    return 0;
} 
