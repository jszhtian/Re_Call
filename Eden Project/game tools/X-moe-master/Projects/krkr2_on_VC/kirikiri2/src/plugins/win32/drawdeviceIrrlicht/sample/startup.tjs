Plugins.link("drawdeviceIrrlicht.dll");

Scripts.execStorage("AffineLayer.tjs");
Scripts.execStorage("ActionLayer.tjs");

var WIDTH=800;
var HEIGHT=600;

/**
 * ベースレイヤ
 * Irrlicht 的にテクスチャとして配置可能なレイヤとして機能する
 */
class BaseLayer extends Layer
{
	var layer;
	
	function BaseLayer(win, width, height) {
		super.Layer(win, null);

		setSize(width, height);
		fillRect(0,0,width,height,0);
		
		// 表示レイヤ
		layer = new ActionLayer(window, this);
		layer.loadImages("test.png");
		layer.setSizeToImageSize();
		layer.setPos((width - layer.width) / 2, (height - layer.height) / 2);
		layer.visible = true;
	}

	function beginAction(module, elm) {
		layer.beginAction(module, elm);
	}
	
	function finalize() {
		invalidate layer;
	}
}

class MyWindow extends Window
{
	var base;
	var base2;
	var irrlicht;
	
	function MyWindow() {
		super.Window();
		innerSunken = false;
		borderStyle = bsSingle;
		setInnerSize(WIDTH, HEIGHT);

		irrlicht = new IrrlichtDrawDevice();
		drawDevice = irrlicht;

		// 1枚目のプライマリレイヤ
		base = new BaseLayer(this, WIDTH, HEIGHT);
		base.beginAction(LayerNormalRotateModule, %[angvel: 100]);

		// 2枚目のプライマリレイヤ
		base2 = new BaseLayer(this, WIDTH, HEIGHT);
		base2.beginAction(LayerJumpActionModule, %[vibration:30, cycle:1000]);

		// フラッシュファイルの読み込み
		irrlicht.loadSWF("data/anntest.swf");
	}

	function finalize() {
		invalidate base;
		invalidate base2;
	}
	
	function onKeyDown(key, shift)
	{
		Debug.message("キーがおされた:" + key);
		if(key == VK_ESCAPE) {
			close();
		} else if(key == VK_TAB) {
			fullScreen = !fullScreen;
		}
	}

//	function onMouseDown(x, y, button, shift) {
//		Debug.message("マウス押し下げ:" + x + "," + y + "," + button + "," + shift);
//	}
	
//	function onMouseMove(x, y, shift) {
//		Debug.message("マウス移動:" + x + "," + y + "," + shift);
//	}

};

var win = new MyWindow();
win.visible = true;
