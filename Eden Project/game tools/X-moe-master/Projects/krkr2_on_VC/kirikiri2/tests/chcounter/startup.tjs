class MyWindow extends Window
{
	var primlayer;

	function MyWindow()
	{
		super.Window();

		borderStyle = bsSingle;

		caption = "文字の出現回数を数える";

		// 下敷き(プライマリレイヤ)
		add(primlayer = new Layer(this, null));
		primlayer.left = primlayer.top = 0;
		primlayer.imageWidth = 260;
		primlayer.imageHeight = 60;
		primlayer.setSizeToImageSize();
		setInnerSize(primlayer.width, primlayer.height);

		primlayer.drawText(10, 10, "エクスプローラ等から文字を数えたいテキストファイルを",
			0x0000ff, 255, true, 255, 0x000000, 3, 2, 2);
		primlayer.drawText(10, 30, "ここにドロップしてください",
			0x0000ff, 255, true, 255, 0x000000, 3, 2, 2);

		Debug.console.visible = true;

		Debug.message("エクスプローラ等から文字を数えたいファイルを、"
			"メインウィンドウにドロップしてください。");


		visible = true;
	}

	function action(ev)
	{
		if(ev.type == "onFileDrop" && ev.target == this)
		{
			for(var i = 0; i < ev.files.count; i++)
				convert_file(ev.files[i]);
		}
	}

	function convert_file(file)
	{
		// ファイル中の出現文字を数える
		try
		{
			Debug.message(file + " を数えています");
			var input = [];
			input.load(file);
			var new_file = Storages.chopStorageExt(file) + ".out.txt";
			var output = %[];

			// ファイルをみる
			var totalTime = 0;
			for(var i = 0; i < input.count; i++)
			{
				var l = input[i];
				var ll = l.length;
				for(var j = 0; j < ll; j++)
				{
					output[l[j]] ++;
				}
			}

			// ファイルを書き込み
			(Dictionary.saveStruct incontextof output)(new_file);

			Debug.message(file + " 数え終了 --> " + new_file);
		}
		catch(e)
		{
			Debug.message("エラーが発生しました(ファイル " + file + ") : " + e.message);
		}
	}

}

var a = new MyWindow();
