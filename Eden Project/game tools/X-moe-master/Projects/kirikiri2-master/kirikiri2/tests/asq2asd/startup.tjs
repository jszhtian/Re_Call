class MyWindow extends Window
{
	var primlayer;

	function MyWindow()
	{
		super.Window();

		borderStyle = bsSingle;

		caption = "asq -> asd コンバータ";

		// 下敷き(プライマリレイヤ)
		add(primlayer = new Layer(this, null));
		primlayer.left = primlayer.top = 0;
		primlayer.imageWidth = 260;
		primlayer.imageHeight = 60;
		primlayer.setSizeToImageSize();
		setInnerSize(primlayer.width, primlayer.height);

		primlayer.drawText(10, 10, "エクスプローラ等から変換したい asq ファイルを",
			0x0000ff, 255, true, 255, 0x000000, 3, 2, 2);
		primlayer.drawText(10, 30, "ここにドロップしてください",
			0x0000ff, 255, true, 255, 0x000000, 3, 2, 2);

		Debug.console.visible = true;

		Debug.message("エクスプローラ等から変換したい asq ファイルを、"
			"「asq -> asd コンバータ」ウィンドウにドロップしてください。");


		visible = true;
	}

	function action(ev)
	{
		if(ev.type == "onFileDrop" && ev.target == this)
		{
			for(var i = 0; i < ev.files.count; i++)
				convert_file(ev.files[i]);
		}
	}

	function convert_file(file)
	{
		// ファイルを変換
		var pattern = /\s*([0-9\-]+)\s*,\s*([0-9\-]+)\s*,\s*([0-9\-]+)\s*,\s*([0-9\-]+)\s*,\s*([0-9\-]+)\s*,\s*([0-9\-]+)\s*,\s*([0-9\-]+)\s*/;
		try
		{
			Debug.message(file + " を変換中");
			var input = [];
			input.load(file);
			var new_file = Storages.chopStorageExt(file) + ".asd";
			var output = [];

			output.add("; file converted by asq2asd");
			output.add("@loadcell");
			output.add("@loop");
			output.add("");
			output.add("*start");

			// ファイルをみる
			var totalTime = 0;
			for(var i = 0; i < input.count; i++)
			{
				var line = input[i];
				if(line.length == 0) continue; // 空行
				if(line[0] == ';') continue; // コメント
				var s = pattern.match(line);
				if(s.count)
				{
					output.add(
						"@copy sx=%s sy=%s sw=%s sh=%s dx=%s dy=%s".sprintf(
							s[1], s[2], s[3], s[4], s[5], s[6]));
					output.add("@wait time=" + s[7]);
					totalTime += +s[7];
				}
			}

			if(totalTime == 0)
			{
				// 時間が 0
				// コンダクタが無限ループに陥るので回避
				throw new Exception("一回のループにかかる時間が 0 です ( asq ファイルではないか、 データが異常 )");
			}

			output.add("@jump target=*start");

			// ファイルを書き込み
			output.save(new_file);

			Debug.message(file + " 変換終了 --> " + new_file);
		}
		catch(e)
		{
			Debug.message("エラーが発生しました(ファイル " + file + ") : " + e.message);
		}
	}

}

var a = new MyWindow();
