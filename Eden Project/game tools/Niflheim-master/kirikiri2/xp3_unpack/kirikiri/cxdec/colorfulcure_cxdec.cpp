#include "cxdec.h"

static int xcode_building_stage0(struct cxdec_xcode_status *xcode, int stage);
static int xcode_building_stage1(struct cxdec_xcode_status *xcode, int stage);

static BYTE EncryptionControlBlock[4096] = {
		0x20, 0x45, 0x6E, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6F, 
		0x6E, 0x20, 0x63, 0x6F, 0x6E, 0x74, 0x72, 0x6F, 0x6C, 0x20, 
		0x62, 0x6C, 0x6F, 0x63, 0x6B, 0x20, 0x2D, 0x2D, 0x20, 0x53, 
		0x74, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6C, 0x6C, 0x79, 0x20, 
		0x6F, 0x72, 0x20, 0x64, 0x79, 0x6E, 0x61, 0x6D, 0x69, 0x63, 
		0x61, 0x6C, 0x6C, 0x79, 0x2C, 0x20, 0x64, 0x69, 0x72, 0x65, 
		0x63, 0x74, 0x6C, 0x79, 0x20, 0x6F, 0x72, 0x20, 0x69, 0x6E, 
		0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6C, 0x79, 0x2C, 0x20, 
		0x75, 0x73, 0x69, 0x6E, 0x67, 0x20, 0x74, 0x68, 0x69, 0x73, 
		0x20, 0x70, 0x72, 0x6F, 0x67, 0x72, 0x61, 0x6D, 0x20, 0x61, 
		0x6E, 0x64, 0x2F, 0x6F, 0x72, 0x20, 0x62, 0x6C, 0x6F, 0x63, 
		0x6B, 0x20, 0x66, 0x72, 0x6F, 0x6D, 0x20, 0x6F, 0x74, 0x68, 
		0x65, 0x72, 0x20, 0x70, 0x72, 0x6F, 0x67, 0x72, 0x61, 0x6D, 
		0x73, 0x20, 0x77, 0x69, 0x6C, 0x6C, 0x20, 0x62, 0x65, 0x20, 
		0x69, 0x6C, 0x6C, 0x65, 0x67, 0x61, 0x6C, 0x20, 0x62, 0x79, 
		0x20, 0x74, 0x68, 0x65, 0x20, 0x6C, 0x69, 0x63, 0x65, 0x6E, 
		0x73, 0x65, 0x20, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6D, 0x65, 
		0x6E, 0x74, 0x2E, 0x20, 0x82, 0xB1, 0x82, 0xCC, 0x83, 0x76, 
		0x83, 0x8D, 0x83, 0x4F, 0x83, 0x89, 0x83, 0x80, 0x82, 0xE2, 
		0x83, 0x75, 0x83, 0x8D, 0x83, 0x62, 0x83, 0x4E, 0x82, 0xF0, 
		0x81, 0x41, 0x90, 0xC3, 0x93, 0x49, 0x82, 0xC5, 0x82, 0xA0, 
		0x82, 0xEA, 0x93, 0xAE, 0x93, 0x49, 0x82, 0xC5, 0x82, 0xA0, 
		0x82, 0xEA, 0x81, 0x41, 0x92, 0xBC, 0x90, 0xDA, 0x93, 0x49, 
		0x82, 0xC5, 0x82, 0xA0, 0x82, 0xEA, 0x8A, 0xD4, 0x90, 0xDA, 
		0x93, 0x49, 0x82, 0xC5, 0x82, 0xA0, 0x82, 0xEA, 0x81, 0x41, 
		0x91, 0xBC, 0x82, 0xCC, 0x83, 0x76, 0x83, 0x8D, 0x83, 0x4F, 
		0x83, 0x89, 0x83, 0x80, 0x82, 0xA9, 0x82, 0xE7, 0x97, 0x70, 
		0x82, 0xA2, 0x82, 0xE9, 0x82, 0xB1, 0x82, 0xC6, 0x82, 0xCD, 
		0x83, 0x89, 0x83, 0x43, 0x83, 0x5A, 0x83, 0x93, 0x83, 0x58, 
		0x82, 0xC9, 0x82, 0xE6, 0x82, 0xE8, 0x8B, 0xD6, 0x82, 0xB6, 
		0x82, 0xE7, 0x82, 0xEA, 0x82, 0xC4, 0x82, 0xA2, 0x82, 0xDC, 
		0x82, 0xB7, 0x81, 0x42, 0x0A, 0x43, 0x6F, 0x70, 0x79, 0x72, 
		0x69, 0x67, 0x68, 0x74, 0x20, 0x45, 0x54, 0x4F, 0x49, 0x4C, 
		0x45, 0x53, 0x20, 0x61, 0x6C, 0x6C, 0x20, 0x72, 0x69, 0x67, 
		0x68, 0x74, 0x73, 0x20, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 
		0x65, 0x72, 0x64, 0x2E, 0x0A, 0x0A, 0x97, 0xF6, 0x82, 0xC6, 
		0x96, 0x82, 0x96, 0x40, 0x82, 0xC5, 0x82, 0xA0, 0x82, 0xC8, 
		0x82, 0xBD, 0x82, 0xCC, 0x82, 0xB1, 0x82, 0xC6, 0x82, 0xF0, 
		0x8E, 0xE7, 0x82, 0xE8, 0x82, 0xDC, 0x82, 0xB7, 0x81, 0x49, 
		0x0A, 0x0A, 0x90, 0x6C, 0x8A, 0xD4, 0x82, 0xCC, 0x90, 0xB6, 
		0x8A, 0x88, 0x82, 0xF0, 0x82, 0xD0, 0x82, 0xBB, 0x82, 0xA9, 
		0x82, 0xC9, 0x94, 0xC6, 0x82, 0xB7, 0x91, 0xB6, 0x8D, 0xDD, 
		0x81, 0x45, 0x88, 0xAB, 0x96, 0x82, 0x81, 0x42, 0x0A, 0x82, 
		0xBB, 0x82, 0xB5, 0x82, 0xC4, 0x88, 0xAB, 0x96, 0x82, 0x82, 
		0xF0, 0x91, 0xDE, 0x8E, 0xA1, 0x82, 0xB7, 0x82, 0xE9, 0x96, 
		0x82, 0x96, 0x40, 0x8F, 0xAD, 0x8F, 0x97, 0x82, 0xC6, 0x82, 
		0xA2, 0x82, 0xA4, 0x91, 0xB6, 0x8D, 0xDD, 0x82, 0xAA, 0x81, 
		0x41, 0x8F, 0xED, 0x82, 0xC9, 0x97, 0xF0, 0x8E, 0x6A, 0x82, 
		0xCC, 0x97, 0xA0, 0x91, 0xA4, 0x82, 0xC5, 0x90, 0xED, 0x82, 
		0xA2, 0x82, 0xF0, 0x8C, 0x4A, 0x82, 0xE8, 0x8D, 0x4C, 0x82, 
		0xB0, 0x82, 0xC4, 0x82, 0xA2, 0x82, 0xBD, 0x81, 0x42, 0x0A, 
		0x82, 0xB5, 0x82, 0xA9, 0x82, 0xB5, 0x94, 0xDE, 0x8F, 0x97, 
		0x82, 0xBD, 0x82, 0xBF, 0x82, 0xE0, 0x96, 0x82, 0x96, 0x40, 
		0x82, 0xF0, 0x8E, 0x67, 0x82, 0xA4, 0x82, 0xBD, 0x82, 0xD1, 
		0x82, 0xC9, 0xE2, 0x71, 0x82, 0xEA, 0x82, 0xAA, 0x97, 0xAD, 
		0x82, 0xDC, 0x82, 0xE8, 0x81, 0x41, 0x82, 0xA2, 0x82, 0xB8, 
		0x82, 0xEA, 0x88, 0xAB, 0x96, 0x82, 0x82, 0xC9, 0x82, 0xC8, 
		0x82, 0xE9, 0x8F, 0x68, 0x96, 0xBD, 0x82, 0xF0, 0x94, 0x77, 
		0x95, 0x89, 0x82, 0xC1, 0x82, 0xC4, 0x82, 0xA2, 0x82, 0xBD, 
		0x81, 0x42, 0x0A, 0x0A, 0x82, 0xBB, 0x82, 0xB5, 0x82, 0xC4, 
		0x8C, 0xBB, 0x91, 0xE3, 0x81, 0x5C, 0x81, 0x5C, 0x0A, 0x90, 
		0xB9, 0x8C, 0x8E, 0x8C, 0xF5, 0x8A, 0x77, 0x89, 0x80, 0x82, 
		0xC9, 0x92, 0xCA, 0x82, 0xA4, 0x90, 0xE7, 0x8F, 0x48, 0x8D, 
		0x67, 0x97, 0x74, 0x81, 0x69, 0x82, 0xBF, 0x82, 0xA0, 0x82, 
		0xAB, 0x82, 0xAD, 0x82, 0xEA, 0x82, 0xCD, 0x81, 0x6A, 0x82, 
		0xCD, 0x81, 0x41, 0x8D, 0xF7, 0x8B, 0x7B, 0x95, 0xC9, 0x81, 
		0x69, 0x82, 0xB3, 0x82, 0xAD, 0x82, 0xE7, 0x82, 0xDD, 0x82, 
		0xE2, 0x82, 0xA0, 0x82, 0xA8, 0x82, 0xA2, 0x81, 0x6A, 0x82, 
		0xC6, 0x82, 0xCC, 0x8F, 0x6F, 0x89, 0xEF, 0x82, 0xA2, 0x82, 
		0xF0, 0x82, 0xAB, 0x82, 0xC1, 0x82, 0xA9, 0x82, 0xAF, 0x82, 
		0xC9, 0x81, 0x41, 0x90, 0x47, 0x82, 0xEA, 0x82, 0xBD, 0x96, 
		0x82, 0x96, 0x40, 0x8F, 0xAD, 0x8F, 0x97, 0x82, 0xCC, 0xE2, 
		0x71, 0x82, 0xEA, 0x82, 0xF0, 0x8F, 0xF2, 0x89, 0xBB, 0x82, 
		0xB7, 0x82, 0xE9, 0x90, 0xB9, 0x90, 0x6C, 0x82, 0xC6, 0x82, 
		0xB5, 0x82, 0xC4, 0x8A, 0x6F, 0x90, 0xC1, 0x82, 0xB7, 0x82, 
		0xE9, 0x81, 0x42, 0x0A, 0x0A, 0x8D, 0x67, 0x97, 0x74, 0x82, 
		0xC9, 0x96, 0xBD, 0x82, 0xF0, 0x8F, 0x95, 0x82, 0xAF, 0x82, 
		0xE7, 0x82, 0xEA, 0x82, 0xBD, 0x81, 0x41, 0x8A, 0x77, 0x89, 
		0x80, 0x82, 0xCC, 0x93, 0xB2, 0x82, 0xEA, 0x82, 0xCC, 0x8D, 
		0x95, 0x94, 0xAF, 0x94, 0xFC, 0x8F, 0xAD, 0x8F, 0x97, 0x8D, 
		0xF7, 0x8B, 0x7B, 0x95, 0xC9, 0x81, 0x42, 0x0A, 0x97, 0x63, 
		0x82, 0xC8, 0x82, 0xB6, 0x82, 0xDD, 0x82, 0xCC, 0x8D, 0x67, 
		0x97, 0x74, 0x82, 0xF0, 0x8E, 0xE7, 0x82, 0xE9, 0x82, 0xBD, 
		0x82, 0xDF, 0x82, 0xC9, 0x81, 0x41, 0x96, 0x82, 0x8C, 0x95, 
		0x82, 0xC6, 0x8C, 0x5F, 0x96, 0xF1, 0x82, 0xB7, 0x82, 0xE9, 
		0x88, 0xEA, 0x83, 0x6D, 0x90, 0xA3, 0x89, 0xD4, 0x89, 0xC4, 
		0x81, 0x69, 0x82, 0xA2, 0x82, 0xBF, 0x82, 0xCC, 0x82, 0xB9, 
		0x82, 0xCD, 0x82, 0xC8, 0x82, 0xC2, 0x81, 0x6A, 0x81, 0x42, 
		0x0A, 0x89, 0xDF, 0x8B, 0x8E, 0x82, 0xA9, 0x82, 0xE7, 0x8D, 
		0x67, 0x97, 0x74, 0x82, 0xC9, 0x89, 0xEF, 0x82, 0xA4, 0x82, 
		0xBD, 0x82, 0xDF, 0x82, 0xC9, 0x81, 0x41, 0x8E, 0x9E, 0x8A, 
		0xD4, 0x92, 0xB5, 0x96, 0xF4, 0x82, 0xB5, 0x82, 0xC4, 0x82, 
		0xAB, 0x82, 0xBD, 0x90, 0x5F, 0x94, 0xE9, 0x82, 0xCC, 0x90, 
		0x6C, 0x91, 0xA2, 0x90, 0x6C, 0x8A, 0xD4, 0x83, 0x41, 0x83, 
		0x8B, 0x83, 0x58, 0x81, 0x45, 0x83, 0x7D, 0x83, 0x4C, 0x83, 
		0x69, 0x81, 0x42, 0x0A, 0x8D, 0x67, 0x97, 0x74, 0x82, 0xC9, 
		0x8F, 0xF2, 0x89, 0xBB, 0x82, 0xB3, 0x82, 0xEA, 0x82, 0xC9, 
		0x97, 0x88, 0x82, 0xBD, 0x81, 0x41, 0x8B, 0xE0, 0x94, 0xAF, 
		0x82, 0xCC, 0x8B, 0x7A, 0x8C, 0x8C, 0x8B, 0x53, 0x83, 0x94, 
		0x83, 0x40, 0x81, 0x5B, 0x83, 0x7E, 0x83, 0x8A, 0x83, 0x49, 
		0x83, 0x93, 0x81, 0x45, 0x83, 0x94, 0x83, 0x46, 0x81, 0x5B, 
		0x83, 0x89, 0x81, 0x45, 0x83, 0x89, 0x83, 0x43, 0x83, 0x7A, 
		0x83, 0x6C, 0x83, 0x93, 0x81, 0x42, 0x0A, 0x0A, 0x90, 0xB9, 
		0x90, 0x6C, 0x82, 0xC6, 0x82, 0xB5, 0x82, 0xC4, 0x96, 0xDA, 
		0x8A, 0x6F, 0x82, 0xDF, 0x82, 0xBD, 0x8D, 0x67, 0x97, 0x74, 
		0x82, 0xCD, 0x81, 0x41, 0x8F, 0xED, 0x82, 0xC9, 0x88, 0xAB, 
		0x96, 0x82, 0x82, 0xE2, 0x82, 0xBB, 0x82, 0xCC, 0x91, 0xBC, 
		0x82, 0xCC, 0x91, 0xB6, 0x8D, 0xDD, 0x82, 0xA9, 0x82, 0xE7, 
		0x82, 0xE0, 0x91, 0x5F, 0x82, 0xED, 0x82, 0xEA, 0x82, 0xE9, 
		0x89, 0x5E, 0x96, 0xBD, 0x81, 0x42, 0x0A, 0x82, 0xB5, 0x82, 
		0xA9, 0x82, 0xB5, 0x34, 0x90, 0x6C, 0x82, 0xCC, 0x96, 0x82, 
		0x96, 0x40, 0x8F, 0xAD, 0x8F, 0x97, 0x82, 0xCC, 0x8A, 0x88, 
		0x96, 0xF4, 0x82, 0xC9, 0x82, 0xE6, 0x82, 0xE8, 0x81, 0x41, 
		0x94, 0xDE, 0x82, 0xCD, 0x88, 0xAB, 0x96, 0x82, 0x82, 0xC5, 
		0x82, 0xE0, 0x8A, 0xC8, 0x92, 0x50, 0x82, 0xC9, 0x82, 0xCD, 
		0x8E, 0xE8, 0x82, 0xAA, 0x8F, 0x6F, 0x82, 0xB9, 0x82, 0xC8, 
		0x82, 0xA2, 0x91, 0xB6, 0x8D, 0xDD, 0x82, 0xC6, 0x82, 0xC8, 
		0x82, 0xC1, 0x82, 0xBD, 0x81, 0x42, 0x0A, 0x0A, 0x90, 0xAB, 
		0x8A, 0x69, 0x82, 0xCC, 0x82, 0xDC, 0x82, 0xC1, 0x82, 0xBD, 
		0x82, 0xAD, 0x88, 0xE1, 0x82, 0xA4, 0x96, 0x82, 0x96, 0x40, 
		0x8F, 0xAD, 0x8F, 0x97, 0x82, 0xBD, 0x82, 0xBF, 0x91, 0x53, 
		0x88, 0xF5, 0x82, 0xC9, 0x95, 0xE7, 0x82, 0xED, 0x82, 0xEA, 
		0x81, 0x41, 0x94, 0x4D, 0x97, 0xF3, 0x82, 0xC8, 0x83, 0x41, 
		0x83, 0x5E, 0x83, 0x62, 0x83, 0x4E, 0x82, 0xF0, 0x8E, 0xF3, 
		0x82, 0xAF, 0x82, 0xE9, 0x8D, 0x67, 0x97, 0x74, 0x81, 0x42, 
		0x0A, 0x81, 0x77, 0x91, 0x93, 0xE2, 0x75, 0x82, 0xCC, 0x83, 
		0x66, 0x83, 0x85, 0x83, 0x89, 0x83, 0x93, 0x83, 0x5F, 0x83, 
		0x8B, 0x81, 0x78, 0x81, 0x77, 0x8D, 0x67, 0x98, 0x40, 0x82, 
		0xCC, 0x83, 0x8C, 0x81, 0x5B, 0x83, 0x94, 0x83, 0x40, 0x83, 
		0x93, 0x83, 0x65, 0x83, 0x42, 0x83, 0x93, 0x81, 0x78, 0x81, 
		0x77, 0x94, 0x92, 0x8B, 0xE2, 0x82, 0xCC, 0x90, 0x6C, 0x91, 
		0xA2, 0x90, 0x6C, 0x8A, 0xD4, 0x81, 0x78, 0x81, 0x77, 0x89, 
		0xA9, 0x8B, 0xE0, 0x82, 0xCC, 0x8B, 0x7A, 0x8C, 0x8C, 0x8B, 
		0x53, 0x81, 0x78, 0x0A, 0x83, 0x4A, 0x83, 0x89, 0x83, 0x74, 
		0x83, 0x8B, 0x82, 0xC8, 0x96, 0xA3, 0x97, 0xCD, 0x82, 0xF0, 
		0x8E, 0x9D, 0x82, 0xC2, 0x96, 0x82, 0x96, 0x40, 0x8F, 0xAD, 
		0x8F, 0x97, 0x82, 0xBD, 0x82, 0xBF, 0x82, 0xCC, 0x96, 0xA2, 
		0x97, 0x88, 0x82, 0xF0, 0x81, 0x41, 0x8D, 0x67, 0x97, 0x74, 
		0x82, 0xCD, 0x8B, 0x7E, 0x82, 0xA2, 0x91, 0xB1, 0x82, 0xAF, 
		0x82, 0xE9, 0x82, 0xB1, 0x82, 0xC6, 0x82, 0xAA, 0x82, 0xC5, 
		0x82, 0xAB, 0x82, 0xE9, 0x82, 0xCC, 0x82, 0xBE, 0x82, 0xEB, 
		0x82, 0xA4, 0x82, 0xA9, 0x81, 0x42, 0x0A, 0x70, 0x1E, 0x8D, 
		0x0F, 0xD8, 0xBE, 0x1A, 0xB3, 0x2E, 0xCE, 0x1F, 0xAF, 0x27, 
		0xBB, 0xE1, 0x29, 0x5E, 0x85, 0x6D, 0x84, 0x15, 0x57, 0x0C, 
		0x67, 0x76, 0x25, 0x8B, 0x68, 0x96, 0xB1, 0xD3, 0xF5, 0x51, 
		0xC5, 0x05, 0x2E, 0xE8, 0x8B, 0x13, 0x3F, 0x17, 0xB8, 0xE3, 
		0x42, 0xDA, 0x43, 0x94, 0x10, 0x83, 0x1C, 0x2C, 0x79, 0xB1, 
		0x0F, 0xEE, 0x7B, 0xE6, 0xC5, 0xB6, 0x62, 0x75, 0x6E, 0xD6, 
		0xE4, 0xE2, 0x69, 0xBB, 0x18, 0xCA, 0x05, 0x44, 0xF8, 0xDE, 
		0x50, 0xDD, 0x21, 0xD5, 0x22, 0x78, 0x74, 0x9B, 0xEA, 0x52, 
		0x1C, 0xE7, 0x64, 0xB5, 0x02, 0xA1, 0x13, 0x4B, 0xA6, 0xA1, 
		0xC2, 0x5B, 0xDA, 0xCD, 0x3A, 0x9C, 0x6A, 0x8A, 0x27, 0xD4, 
		0xA1, 0xDC, 0x2F, 0x60, 0xED, 0xA2, 0x93, 0x9A, 0xC0, 0x92, 
		0x75, 0x3D, 0x63, 0x92, 0x8E, 0x49, 0xEB, 0xD0, 0x40, 0x64, 
		0x7F, 0xFA, 0x81, 0xF2, 0x99, 0x79, 0x15, 0xD6, 0xF3, 0x18, 
		0x98, 0x37, 0x51, 0xBA, 0xC5, 0x18, 0x5B, 0xF5, 0x66, 0x5A, 
		0x9D, 0x11, 0x04, 0x9F, 0xD9, 0x96, 0x5A, 0x75, 0x75, 0x1F, 
		0xD4, 0x5A, 0x0C, 0xEF, 0x96, 0x8E, 0x48, 0x67, 0x2D, 0x6D, 
		0x16, 0x38, 0xCC, 0x0E, 0xF3, 0x0B, 0x7E, 0xEF, 0xB5, 0x0F, 
		0x3E, 0x72, 0x3D, 0x5A, 0x88, 0x4D, 0x9C, 0xD4, 0x1A, 0x17, 
		0x37, 0xA2, 0xF9, 0xDB, 0x42, 0xC9, 0xBD, 0x38, 0x50, 0xE9, 
		0xDD, 0xBB, 0xDD, 0xAE, 0x70, 0xF8, 0xC6, 0xB0, 0x63, 0x58, 
		0xD8, 0xFA, 0xD4, 0xD5, 0xA1, 0x02, 0xC3, 0xF4, 0x90, 0xD6, 
		0xA0, 0x10, 0x97, 0xBD, 0xA0, 0x6C, 0x17, 0x50, 0x48, 0x7A, 
		0x9F, 0xA4, 0x8E, 0x59, 0x55, 0x4A, 0x2F, 0xC8, 0x8D, 0x93, 
		0x7C, 0xD6, 0xB4, 0x82, 0xE3, 0x55, 0x23, 0x71, 0xF8, 0xFE, 
		0x18, 0xCC, 0x56, 0x09, 0x06, 0xDA, 0x7A, 0xA2, 0x46, 0xA4, 
		0xDD, 0x24, 0x77, 0x57, 0x34, 0xB9, 0x1C, 0x56, 0x9E, 0x68, 
		0x4E, 0x1F, 0xA5, 0x54, 0x82, 0x06, 0xA9, 0x12, 0xEE, 0x74, 
		0x05, 0x30, 0xC0, 0xE4, 0x77, 0x2B, 0x30, 0xB7, 0x8F, 0xAB, 
		0x9F, 0xF6, 0xB5, 0x8A, 0xED, 0xFC, 0x3F, 0xED, 0xF9, 0x48, 
		0xB2, 0xA2, 0x73, 0x91, 0xE0, 0x7E, 0xF7, 0x8B, 0x7B, 0xF2, 
		0x81, 0x5D, 0x46, 0x9E, 0xA7, 0xD6, 0x55, 0xB4, 0xAC, 0xA6, 
		0x79, 0xB1, 0x05, 0xBD, 0xDE, 0x92, 0xEB, 0xA7, 0x89, 0xE0, 
		0x32, 0x37, 0x67, 0x5A, 0x3D, 0xC1, 0xF2, 0x74, 0xA3, 0xDA, 
		0x00, 0x2D, 0x31, 0xEE, 0x6C, 0x23, 0x6E, 0x59, 0x14, 0xC7, 
		0xE4, 0xBB, 0x29, 0xFC, 0xEF, 0x01, 0x7A, 0x08, 0xE0, 0x40, 
		0xFE, 0xBA, 0x55, 0x3D, 0xBB, 0x72, 0x2D, 0xC4, 0x64, 0x2C, 
		0x65, 0x3D, 0x74, 0xD3, 0x26, 0xD1, 0x4F, 0x6C, 0x0D, 0x4A, 
		0x6D, 0x1A, 0x02, 0xA2, 0x51, 0xDF, 0xE8, 0x73, 0xAE, 0x4B, 
		0xFC, 0xB2, 0x4E, 0xAF, 0x01, 0xFB, 0x41, 0x62, 0x5B, 0xC6, 
		0x13, 0xBE, 0x75, 0x66, 0x66, 0x32, 0x5B, 0x93, 0x09, 0x7C, 
		0xCB, 0xAC, 0xEC, 0x68, 0xC9, 0x57, 0xE7, 0xB8, 0x90, 0x05, 
		0xA3, 0x40, 0x55, 0xB8, 0xFC, 0xB0, 0x1B, 0x13, 0x5E, 0xB9, 
		0xF0, 0x46, 0xEF, 0x67, 0xD9, 0x89, 0x79, 0x71, 0xD0, 0x35, 
		0x76, 0x98, 0x4A, 0x34, 0x63, 0xFE, 0x0D, 0xDC, 0x87, 0xF2, 
		0x99, 0x5B, 0x17, 0x8D, 0x26, 0x29, 0xD2, 0x06, 0x8B, 0xFC, 
		0x0E, 0x05, 0xAC, 0x19, 0xBF, 0xB9, 0x72, 0x1C, 0x57, 0x8A, 
		0x48, 0x3A, 0xCB, 0xDA, 0x2A, 0xD9, 0x63, 0x90, 0x37, 0x06, 
		0xF0, 0xE4, 0x4C, 0xBF, 0x9B, 0xAD, 0x2D, 0x9A, 0xDA, 0x1C, 
		0x5D, 0x90, 0x9E, 0xEB, 0x93, 0xF5, 0x5A, 0x39, 0x20, 0x3E, 
		0xA8, 0x0A, 0x1D, 0x0C, 0x4B, 0xB1, 0x52, 0xBA, 0xA8, 0x64, 
		0x74, 0x10, 0xA6, 0xA4, 0x04, 0xA2, 0xD6, 0x41, 0x69, 0x34, 
		0x45, 0x33, 0x81, 0x02, 0x72, 0x24, 0xF9, 0x19, 0x6F, 0x2E, 
		0x07, 0x1E, 0x7D, 0x12, 0xB8, 0xE7, 0x12, 0xCE, 0x0B, 0x88, 
		0x3E, 0xF5, 0x74, 0x87, 0xEE, 0xBB, 0x61, 0xF4, 0xC0, 0x6B, 
		0xF4, 0xF8, 0x18, 0x4E, 0x2D, 0x01, 0xF1, 0x3B, 0x9B, 0x31, 
		0x6E, 0x47, 0xE1, 0x30, 0x4B, 0xC8, 0x9B, 0x5B, 0xCD, 0x36, 
		0xC6, 0x37, 0xB3, 0x40, 0x0B, 0x7D, 0xE4, 0x8A, 0x03, 0x7B, 
		0xE7, 0xD3, 0x25, 0x37, 0x58, 0x46, 0x17, 0x16, 0x84, 0x13, 
		0xF8, 0xD1, 0x0C, 0xC3, 0xFB, 0xAD, 0x08, 0x65, 0x58, 0x10, 
		0x7E, 0x93, 0x74, 0xD1, 0xAF, 0x68, 0x74, 0x88, 0x37, 0x91, 
		0x65, 0x13, 0xDE, 0xC4, 0xA8, 0x5A, 0xA5, 0x46, 0x4D, 0xDC, 
		0xF9, 0xCD, 0x11, 0xF3, 0xD3, 0x69, 0xB7, 0x5F, 0xB0, 0xB7, 
		0x19, 0x6A, 0xED, 0xE5, 0x4A, 0xB4, 0xD9, 0xE4, 0x2A, 0x10, 
		0x6B, 0xAB, 0xD0, 0xD9, 0x38, 0xDE, 0x93, 0x09, 0x6B, 0xBE, 
		0xAE, 0x33, 0xB6, 0xE4, 0xBD, 0xD1, 0x5D, 0x8F, 0x89, 0x38, 
		0xD3, 0x5D, 0xC8, 0x69, 0x22, 0xED, 0x14, 0xBF, 0xDD, 0x6E, 
		0x30, 0x94, 0x47, 0xBE, 0x65, 0x2F, 0x20, 0x05, 0x3A, 0x83, 
		0x32, 0xF2, 0x70, 0x3E, 0x5D, 0x24, 0xA8, 0x6C, 0x9F, 0xA6, 
		0x7C, 0x3C, 0x84, 0xD1, 0x55, 0xDC, 0x7B, 0x71, 0x60, 0xAA, 
		0x4B, 0x13, 0x09, 0xD6, 0x54, 0xCE, 0xC6, 0x0B, 0x13, 0x9F, 
		0x76, 0xDD, 0xFF, 0x7B, 0xCA, 0x32, 0x6D, 0x1D, 0xD0, 0x86, 
		0x9B, 0x1B, 0xAC, 0xB3, 0xDA, 0x48, 0x04, 0x99, 0xEB, 0xC8, 
		0xBF, 0x0A, 0x99, 0xB9, 0xFD, 0x2A, 0xF2, 0x5B, 0xA9, 0x07, 
		0xA3, 0x27, 0xF6, 0xFA, 0x2E, 0xB3, 0x08, 0x6C, 0x21, 0x33, 
		0xB9, 0xF8, 0x2C, 0xF6, 0xCA, 0x2A, 0xD0, 0x52, 0xEC, 0xF8, 
		0x38, 0x65, 0x68, 0x51, 0x40, 0x82, 0xBB, 0x3B, 0x15, 0x7C, 
		0xEC, 0x84, 0xB5, 0xFE, 0x3B, 0xD9, 0xC2, 0xCB, 0x1B, 0xDB, 
		0x4C, 0xEF, 0x28, 0xBB, 0x3D, 0x4D, 0x4E, 0x3E, 0x48, 0xCF, 
		0xFB, 0xA5, 0x3B, 0x36, 0xA7, 0x6D, 0xBB, 0x6C, 0x11, 0x06, 
		0x83, 0x5D, 0x6E, 0x5F, 0xC3, 0x97, 0x9B, 0x35, 0xFD, 0x96, 
		0x77, 0xB2, 0x27, 0xDE, 0x48, 0x63, 0x92, 0x8E, 0x2E, 0x37, 
		0x24, 0xE6, 0xEE, 0xB1, 0x23, 0xC2, 0x47, 0x55, 0x9B, 0xC3, 
		0xD8, 0x9E, 0x16, 0xAC, 0x51, 0xE3, 0x99, 0x68, 0xBF, 0xE2, 
		0x66, 0x3E, 0xD5, 0x68, 0x6A, 0x3F, 0x99, 0x3F, 0x2E, 0xFC, 
		0x39, 0x6B, 0xCB, 0x0D, 0x5B, 0x01, 0xE2, 0xA4, 0x3C, 0x81, 
		0xF6, 0x6A, 0xA4, 0xD7, 0x80, 0x5C, 0x4C, 0x57, 0x1B, 0xB0, 
		0xA6, 0x87, 0xDC, 0x2C, 0x80, 0x88, 0x54, 0x67, 0x5D, 0x3A, 
		0xDA, 0x19, 0x0F, 0xF7, 0xBA, 0x97, 0x28, 0xFE, 0xAD, 0xC8, 
		0x0D, 0xBE, 0xE2, 0xD9, 0xA5, 0x1B, 0x01, 0xB5, 0x2B, 0xCB, 
		0xAF, 0xAA, 0xA1, 0xCF, 0xCC, 0xD3, 0x59, 0x42, 0x39, 0x8E, 
		0xEB, 0x0F, 0xB4, 0xBE, 0x28, 0x3B, 0xBE, 0x90, 0xC3, 0x94, 
		0xDF, 0xF2, 0xF4, 0xBD, 0x5C, 0x88, 0x1A, 0x28, 0x33, 0x9F, 
		0x4E, 0x6F, 0xBB, 0xAC, 0x07, 0xB6, 0x7B, 0x65, 0x55, 0x58, 
		0x3E, 0x01, 0xAD, 0xFE, 0x6B, 0x1B, 0xC9, 0x5B, 0xBE, 0x60, 
		0xDA, 0x83, 0xA7, 0xA6, 0xBE, 0x04, 0xC5, 0x07, 0xDA, 0x90, 
		0xEF, 0x5D, 0xA7, 0x8C, 0x3F, 0x6D, 0x70, 0xD3, 0x73, 0xEA, 
		0xAC, 0xD2, 0x1E, 0xE0, 0xA3, 0x18, 0x87, 0x9E, 0x93, 0x8F, 
		0x1F, 0xC1, 0x80, 0xF1, 0xB4, 0x3E, 0xDF, 0x9C, 0x83, 0x79, 
		0x4A, 0x78, 0x54, 0xEF, 0xEF, 0xAB, 0x0C, 0x38, 0x8B, 0x79, 
		0x7D, 0x0E, 0x18, 0x7C, 0xE7, 0x21, 0x0F, 0x08, 0xCF, 0x8C, 
		0xA7, 0xB3, 0xCE, 0x7E, 0xA0, 0xD6, 0x4F, 0x39, 0xCC, 0x62, 
		0xFD, 0x02, 0x6B, 0xCA, 0xD6, 0xDD, 0xDE, 0xE8, 0x08, 0xDC, 
		0x99, 0x14, 0x8A, 0x51, 0x7B, 0x32, 0xBC, 0xFA, 0x88, 0xB8, 
		0x51, 0xCF, 0x68, 0xB7, 0x49, 0x7A, 0xE3, 0xAF, 0x10, 0x69, 
		0xC0, 0xC7, 0xB0, 0x5E, 0xFC, 0x83, 0x7B, 0x40, 0xD6, 0x39, 
		0x6B, 0x3E, 0xF1, 0x63, 0xE0, 0xF7, 0xCB, 0xAB, 0x45, 0x78, 
		0x89, 0x28, 0xBC, 0xA4, 0xD1, 0xD1, 0x65, 0x1B, 0x8A, 0x7D, 
		0x27, 0x63, 0x09, 0x01, 0xEC, 0xAB, 0xC1, 0x76, 0x1F, 0x9A, 
		0x4B, 0x91, 0x05, 0x54, 0x7B, 0xF8, 0xC4, 0x98, 0xFD, 0x9C, 
		0x2A, 0x7D, 0xD0, 0xAB, 0xE7, 0x3D, 0x6E, 0x47, 0x57, 0x59, 
		0x18, 0x92, 0x45, 0xC2, 0x09, 0x57, 0x96, 0x1C, 0x53, 0x78, 
		0x30, 0x2D, 0x32, 0xBC, 0x26, 0x9A, 0x37, 0x7B, 0x95, 0xA0, 
		0xE1, 0x90, 0x7A, 0x2C, 0x21, 0x69, 0x6C, 0x0B, 0x62, 0xB6, 
		0xEF, 0x11, 0xE4, 0xDB, 0x6F, 0xE3, 0xB6, 0xE9, 0x65, 0x67, 
		0x20, 0x32, 0xF2, 0xFE, 0x58, 0x98, 0xA3, 0x9E, 0xE5, 0xD4, 
		0x80, 0xBE, 0x93, 0x27, 0x5A, 0x2E, 0x12, 0x9F, 0x26, 0xEA, 
		0xE1, 0xBE, 0x69, 0xB7, 0x2D, 0x02, 0x81, 0x78, 0x9B, 0x56, 
		0xA9, 0x07, 0xE8, 0xE3, 0xED, 0xFA, 0x8B, 0x15, 0x35, 0x55, 
		0xCB, 0x84, 0x4B, 0x77, 0x8A, 0x93, 0xAD, 0xBF, 0x8E, 0xCA, 
		0x46, 0xC6, 0x34, 0xD4, 0x99, 0x70, 0x70, 0x47, 0x57, 0xD7, 
		0x56, 0x94, 0x30, 0x7A, 0xBF, 0x8B, 0xE9, 0x50, 0x2E, 0xFD, 
		0x2D, 0x47, 0x53, 0xDC, 0x3E, 0xA3, 0x8E, 0xDE, 0x30, 0x7F, 
		0x53, 0x00, 0x92, 0x60, 0xBA, 0x7F, 0xB7, 0x62, 0xB1, 0xC1, 
		0x66, 0x2A, 0x1A, 0xAD, 0x4F, 0x51, 0x0F, 0xC1, 0x57, 0xF0, 
		0x4A, 0x96, 0x19, 0x7E, 0xCB, 0x04, 0x74, 0xDD, 0x3B, 0x10, 
		0x61, 0x23, 0x75, 0x28, 0xA3, 0xCE, 0x13, 0x0C, 0xFF, 0x5D, 
		0xC9, 0x56, 0x70, 0x5F, 0x2C, 0xBB, 0xEE, 0x84, 0x94, 0xBD, 
		0xFB, 0x34, 0xEA, 0x81, 0xE0, 0xCB, 0x45, 0x37, 0x2E, 0x95, 
		0x32, 0x89, 0xD2, 0x64, 0x0B, 0x7D, 0xD7, 0x67, 0x64, 0xD9, 
		0xB0, 0x03, 0x62, 0x06, 0xD3, 0x68, 0x98, 0xB4, 0x4A, 0x9D, 
		0x11, 0x4F, 0x19, 0x86, 0x5C, 0x70, 0x2C, 0xFF, 0x56, 0x72, 
		0xF0, 0x90, 0xD6, 0x3D, 0xF9, 0x3E, 0x6E, 0x50, 0xCC, 0xD9, 
		0xF7, 0x6D, 0xED, 0xB8, 0xFE, 0x0E, 0xEA, 0xCA, 0x6A, 0x89, 
		0x35, 0x2B, 0x07, 0x87, 0x0F, 0x55, 0x03, 0x27, 0xB9, 0x03, 
		0x1A, 0xC8, 0x01, 0xA4, 0x20, 0xB1, 0xD3, 0x00, 0xDD, 0xB3, 
		0x49, 0x25, 0x2A, 0xDF, 0xEF, 0x35, 0xEF, 0xC5, 0x68, 0x70, 
		0x87, 0x05, 0x50, 0xCF, 0xE1, 0x3C, 0x3B, 0x53, 0xD8, 0x43, 
		0x29, 0xA2, 0x6B, 0x22, 0xFE, 0xC0, 0x9C, 0xC4, 0xDC, 0xA0, 
		0xEE, 0xCF, 0xB7, 0x10, 0xDC, 0x0B, 0x2F, 0x59, 0xDD, 0x53, 
		0x24, 0x88, 0x22, 0x05, 0x57, 0x41, 0xDC, 0x86, 0xCE, 0x88, 
		0xE6, 0x60, 0xA4, 0xBB, 0x8D, 0x68, 0x97, 0x50, 0x6A, 0x52, 
		0x28, 0x16, 0x73, 0x1F, 0xC3, 0xB1, 0x44, 0x12, 0x01, 0x85, 
		0xF6, 0xB3, 0xB7, 0x82, 0x49, 0xF9, 0x86, 0x3A, 0x29, 0xE3, 
		0xA3, 0x1E, 0xCB, 0xF1, 0xCF, 0x33, 0xE6, 0x58, 0xD0, 0xDA, 
		0x3F, 0x8F, 0x1C, 0xDE, 0x5B, 0xA3, 0x5E, 0xF8, 0x9C, 0xA7, 
		0xF4, 0xCE, 0x26, 0x7A, 0xFF, 0xB6, 0x87, 0x29, 0x9B, 0x09, 
		0xCA, 0x36, 0x52, 0x95, 0xBB, 0xFC, 0xEC, 0xFF, 0xE0, 0x48, 
		0x71, 0x76, 0xE3, 0xC3, 0xB4, 0x99, 0xD2, 0xDE, 0x4D, 0x94, 
		0x2E, 0xD3, 0x31, 0x5E, 0xF4, 0xF8, 0xAF, 0x0D, 0x00, 0x5B, 
		0x3D, 0x11, 0xAB, 0xD4, 0x3B, 0xAF, 0xFD, 0xCC, 0x89, 0xAD, 
		0x27, 0x4C, 0x85, 0x90, 0x63, 0xF8, 0x3E, 0xBB, 0xDB, 0x28, 
		0x9A, 0x0A, 0xEF, 0x22, 0xC4, 0xC1, 0xF6, 0x99, 0x0C, 0xF6, 
		0x7A, 0x2E, 0x24, 0x38, 0x78, 0x15, 0xE1, 0x03, 0x9E, 0xEE, 
		0x4E, 0x4A, 0xFF, 0x10, 0x3D, 0xE7, 0xCE, 0xCD, 0x1D, 0xFD, 
		0xDF, 0x3D, 0x90, 0xB4, 0x53, 0x74, 0xBD, 0x9A, 0x59, 0x17, 
		0x31, 0xA1, 0xBF, 0x53, 0xCB, 0x78, 0xB0, 0x39, 0x9C, 0x7D, 
		0x2B, 0x04, 0xB3, 0x7B, 0xBC, 0x92, 0x1E, 0x80, 0x58, 0x05, 
		0x37, 0x9B, 0x87, 0x2C, 0x21, 0xAD, 0x93, 0x3D, 0x2E, 0x0D, 
		0x5B, 0x04, 0xCA, 0x15, 0xDE, 0x3F, 0x06, 0xE0, 0xBA, 0x51, 
		0x75, 0x4A, 0x58, 0xD5, 0x46, 0x77, 0x49, 0xA4, 0x2D, 0x32, 
		0x4C, 0xAA, 0xF6, 0x65, 0x02, 0x0A, 0xE2, 0xE7, 0xFC, 0x84, 
		0x40, 0xD4, 0x52, 0x86, 0x5C, 0x7C, 0xF8, 0xF9, 0xE7, 0xD1, 
		0x3F, 0xC1, 0x4C, 0x1F, 0xED, 0xBB, 0x1A, 0x79, 0x54, 0xAF, 
		0x8A, 0xAA, 0x72, 0x43, 0x5A, 0x41, 0x52, 0x6D, 0xAD, 0xF7, 
		0xEF, 0xA8, 0x6D, 0x0C, 0x54, 0x03, 0xAB, 0xD4, 0x45, 0xE2, 
		0x95, 0x05, 0xE9, 0x86, 0xA5, 0x41, 0x34, 0xD4, 0x42, 0x51, 
		0x5C, 0x5A, 0x22, 0x57, 0x6F, 0xC3, 0xB4, 0xE4, 0x50, 0xC1, 
		0x1D, 0x46, 0xE2, 0x87, 0xC6, 0x68, 0x4D, 0x79, 0xC1, 0x5E, 
		0x8D, 0xD9, 0xA0, 0x71, 0xBC, 0xDA, 0x95, 0x5C, 0xCE, 0x03, 
		0x38, 0xE3, 0x4A, 0x67, 0x7B, 0x7C, 0x65, 0x1B, 0xEB, 0x5F, 
		0xA4, 0x56, 0xA5, 0x81, 0xDF, 0xD6, 0x2E, 0x4D, 0x0E, 0xB9, 
		0x7E, 0x62, 0x30, 0x13, 0x97, 0xE8, 0x8A, 0x11, 0x09, 0x2E, 
		0xDD, 0xBC, 0x5B, 0x94, 0x47, 0x67, 0x9B, 0xB3, 0x0A, 0x81, 
		0xBA, 0xFF, 0xCF, 0xD0, 0x48, 0xD8, 0x02, 0xDD, 0x9C, 0xA2, 
		0xA9, 0x17, 0xD1, 0xE8, 0xA0, 0x5A, 0x8E, 0x0A, 0xAF, 0xD0, 
		0xB0, 0x7C, 0x49, 0x9B, 0x0C, 0xE2, 0x80, 0x41, 0x5F, 0x57, 
		0x3E, 0x53, 0x6F, 0x69, 0x22, 0xD7, 0x62, 0x10, 0x2D, 0x77, 
		0x8D, 0x78, 0xB8, 0x6D, 0x83, 0xCE, 0x15, 0x8A, 0xFE, 0x8E, 
		0xC4, 0x41, 0x7B, 0xCA, 0x5B, 0x4D, 0xE1, 0x2A, 0x77, 0xF0, 
		0x47, 0x18, 0xE0, 0xFE, 0xAD, 0x16, 0x77, 0x96, 0x0E, 0x53, 
		0xC4, 0xD7, 0xFF, 0x2D, 0x25, 0x65, 0x6B, 0x15, 0xC5, 0x56, 
		0x74, 0x3F, 0x4C, 0x92, 0x33, 0xF5, 0x86, 0x46, 0x41, 0xE2, 
		0x82, 0xB2, 0x18, 0xF9, 0x94, 0x37, 0x2B, 0x92, 0xE4, 0x8B, 
		0xAD, 0x0F, 0x52, 0x2E, 0x87, 0x69, 0x30, 0x91, 0x3A, 0x16, 
		0xC2, 0xF1, 0xBF, 0x6B, 0x6B, 0xC2, 0x32, 0xAC, 0x3B, 0xBB, 
		0x3C, 0x00, 0x4A, 0x5A, 0xD9, 0x12, 0x12, 0xF4, 0x22, 0x7E, 
		0x6B, 0x4D, 0x74, 0xF1, 0xF4, 0x06, 0x8A, 0x23, 0xEE, 0x57, 
		0x61, 0xE8, 0x6C, 0x66, 0x86, 0xA5, 0xCC, 0x3A, 0x27, 0xAF, 
		0x31, 0xF5, 0x24, 0xC0, 0xCE, 0x0F, 0x66, 0x92, 0xA7, 0x40, 
		0x52, 0xFF, 0xDF, 0x32, 0x2C, 0x11, 0x4A, 0xFA, 0x07, 0xFB, 
		0x76, 0x9E, 0x15, 0x7A, 0xFC, 0x51, 0x30, 0x52, 0xD8, 0xB2, 
		0x07, 0xDA, 0xB5, 0x95, 0x0D, 0x2F, 0x91, 0x7C, 0xB0, 0x24, 
		0x32, 0x7B, 0x0D, 0x4B, 0x55, 0x25, 0xC2, 0xC7, 0x4B, 0xEC, 
		0x4A, 0x92, 0x23, 0xD4, 0xB0, 0x0F, 0xF9, 0x94, 0x39, 0x7D, 
		0x93, 0xE8, 0x86, 0x83, 0xA5, 0x3A, 0x60, 0x84, 0x55, 0x9E, 
		0xF9, 0x0F, 0xA9, 0x07, 0x79, 0xB1, 0xFA, 0x35, 0x7A, 0x2F, 
		0xEF, 0xCE, 0xB9, 0xBC, 0x35, 0xB7, 0xB1, 0x2B, 0xC3, 0xA2, 
		0x82, 0x84, 0x41, 0x1E, 0x00, 0x1B, 0xA5, 0x5C, 0x6C, 0x75, 
		0xC7, 0x89, 0x4C, 0x2B, 0x93, 0x1C, 0xD1, 0x7F, 0x3B, 0x89, 
		0x45, 0xCC, 0x43, 0xEB, 0xBB, 0xE2, 0xC2, 0xEE, 0x5B, 0xA9, 
		0x3D, 0x97, 0x71, 0x8B, 0xF8, 0xE8, 0xF5, 0xA6, 0xDB, 0x53, 
		0x12, 0xEE, 0xE3, 0x13, 0x73, 0xA2, 0x8D, 0xD3, 0xA3, 0x9B, 
		0x59, 0x85, 0xEC, 0xE3, 0x7A, 0x0C, 0xBB, 0x53, 0x9F, 0x72, 
		0x63, 0x86, 0xDB, 0x1F, 0xED, 0xB7, 0x39, 0xF2, 0xA8, 0x78, 
		0x93, 0xD1, 0x28, 0x6C, 0xEC, 0xA7, 0x5D, 0x76, 0xF8, 0x20, 
		0x93, 0xFE, 0xFF, 0x27, 0xDF, 0x79, 0xC8, 0x52, 0x88, 0x70, 
		0xB9, 0x3E, 0x12, 0x15, 0xBA, 0xAB, 0xF2, 0x43, 0x43, 0x28, 
		0x9F, 0xBF, 0x7C, 0x06, 0x97, 0x54, 0xB7, 0x04, 0x51, 0xE9, 
		0x36, 0x71, 0xC7, 0x23, 0x16, 0x3E, 0xCE, 0xFF, 0x27, 0x73, 
		0xD7, 0x1E, 0x0F, 0x54, 0x98, 0x9C, 0x77, 0x71, 0xD2, 0x7E, 
		0x5A, 0x0D, 0xB6, 0x68, 0x0B, 0x28, 0xAC, 0xED, 0x5E, 0xBC, 
		0x94, 0xC6, 0x02, 0x90, 0xE8, 0x9B, 0x8C, 0x9D, 0xAD, 0xF4, 
		0xA3, 0x34, 0xDF, 0xD6, 0x36, 0x88, 0xA5, 0x23, 0xF4, 0x69, 
		0x71, 0x39, 0x18, 0xC5, 0x8C, 0x36, 0x35, 0x71, 0x09, 0x94, 
		0x4E, 0x76, 0x85, 0xE4, 0xE5, 0x58, 0xB7, 0xD9, 0xA5, 0x9E, 
		0x15, 0x5E, 0x5E, 0x35, 0xDB, 0x76, 0x05, 0x43, 0x3F, 0x1A, 
		0xA7, 0xA1, 0x38, 0x5A, 0x69, 0x0B, 0x03, 0x41, 0xC7, 0x3F, 
		0xE4, 0x58, 0xDB, 0x9D, 0x51, 0x07, 0xC3, 0x68, 0xC4, 0x68, 
		0xF6, 0xE9, 0xF5, 0xD4, 0x0E, 0x12, 0x1C, 0xF0, 0x27, 0xB1, 
		0xC4, 0x82, 0x9B, 0x49, 0x12, 0xAC, 0x8E, 0x5C, 0xA2, 0xE3, 
		0x90, 0x96, 0x77, 0xC9, 0x19, 0x2E, 0xBF, 0x01, 0x4D, 0x72, 
		0xB7, 0xD3, 0xEB, 0x8F, 0x3B, 0x06, 0xFB, 0x43, 0x74, 0x39, 
		0xAE, 0x93, 0x0C, 0x30, 0x9F, 0x27, 0xCF, 0x90, 0x9B, 0xC9, 
		0x95, 0xCB, 0xF1, 0x7A, 0x7E, 0xA3, 0x21, 0xFE, 0x95, 0xAC, 
		0x0E, 0xFF, 0x8A, 0x6B, 0x43, 0xF6, 0x6F, 0xA2, 0x03, 0x4D, 
		0xBB, 0x0A, 0xEC, 0xFE, 0x5D, 0xD1, 0x04, 0x44, 0x27, 0x65, 
		0xFA, 0xBA, 0xCC, 0xFD, 0xF4, 0xF7, 0x4B, 0x6F, 0xE3, 0x31, 
		0x6F, 0x21, 0x91, 0x98, 0x4C, 0x53, 0x11, 0x03, 0x19, 0x6E, 
		0x49, 0x4E, 0xAC, 0x21, 0xBA, 0x5A, 0x0D, 0x50, 0xC0, 0x3D, 
		0x50, 0xD3, 0xE7, 0x97, 0x78, 0xBE, 0x24, 0x19, 0x04, 0x7D, 
		0x1F, 0x85, 0x8E, 0x52, 0xA6, 0x9E, 0xDF, 0x86, 0x6B, 0xA3, 
		0x94, 0xC3, 0x6E, 0x37, 0x67, 0xCF, 0xC2, 0xA5, 0x66, 0x20, 
		0xAE, 0x85, 0x07, 0x53, 0xF4, 0x4E, 0xA1, 0x2A, 0xCF, 0xC4, 
		0x63, 0xA1, 0xEC, 0xF6, 0xF6, 0x02, 0xB2, 0x83, 0xBA, 0xBD, 
		0x2C, 0x94, 0xE4, 0x4D, 0xBF, 0x79, 0x90, 0x49, 0x06, 0x1D, 
		0x74, 0x45, 0x6D, 0x8E, 0x1D, 0x05, 0x35, 0x1F, 0xE1, 0x00, 
		0xD9, 0x3C, 0x25, 0x40, 0x33, 0x18, 0xEE, 0xBA, 0xFB, 0x80, 
		0x58, 0x0B, 0x12, 0xAC, 0xCE, 0x0F, 0x18, 0x5F, 0x4E, 0xD9, 
		0x89, 0x1A, 0xE9, 0x2C, 0x9E, 0xA3, 0x36, 0x8C, 0x02, 0xB2, 
		0x28, 0xD2, 0x39, 0x1F, 0x8A, 0x28, 0xB2, 0xD1, 0x14, 0x54, 
		0x70, 0x5D, 0xB6, 0xD3, 0xB2, 0x81, 0x58, 0xCD, 0xDA, 0xC4, 
		0xDD, 0xCC, 0x91, 0x42, 0x1E, 0x82, 0x38, 0xA1, 0x0A, 0x0C, 
		0x4A, 0x00, 0x79, 0xF8, 0x7B, 0x07, 0xB9, 0x37, 0xFA, 0x8C, 
		0x16, 0x50, 0xB2, 0x0B, 0xE8, 0x8D, 0xE0, 0x3F, 0xE2, 0x1E, 
		0x3B, 0xC9, 0x7D, 0xB5, 0xCB, 0x92, 0x2B, 0x38, 0x36, 0xAA, 
		0xD8, 0x51, 0x8A, 0x86, 0xAB, 0xCE, 0xBD, 0x68, 0xED, 0x52, 
		0xA3, 0x07, 0x79, 0x84, 0x13, 0x0E, 0xD4, 0x48, 0x89, 0xE6, 
		0x5B, 0x72, 0xF5, 0xA0, 0xBE, 0x77, 0x07, 0x1D, 0xEE, 0x24, 
		0xA3, 0x70, 0xDD, 0xA9, 0xDB, 0xC7, 0xDA, 0x70, 0x34, 0x49, 
		0xA1, 0xEE, 0x05, 0x16, 0x05, 0x07, 0x0B, 0xAC, 0x74, 0x93, 
		0xDB, 0xC9, 0x8A, 0x77, 0xD2, 0xD5, 0xDD, 0x9C, 0x9B, 0x35, 
		0x19, 0x30, 0xB6, 0x50, 0x70, 0xE6, 0x93, 0x16, 0x63, 0x52, 
		0x25, 0x73, 0x28, 0x18, 0x8E, 0xCE, 0x45, 0xC4, 0xF8, 0xF1, 
		0x97, 0x91, 0x58, 0x20, 0xC6, 0x34, 0xC6, 0x70, 0xD2, 0x34, 
		0x1A, 0xC4, 0xF3, 0x4B, 0xA2, 0xE6, 0xB9, 0x80, 0x5F, 0xB0, 
		0x7A, 0x8B, 0x1F, 0xC3, 0x66, 0xE0, 0x40, 0x5A, 0x6A, 0x7C, 
		0x7A, 0x7A, 0xA0, 0xCB, 0x68, 0x28, 0xBD, 0x50, 0xC7, 0xD3, 
		0x5D, 0xCC, 0x34, 0x06, 0x15, 0x25, 0xE2, 0x50, 0xF4, 0xBF, 
		0xD1, 0x20, 0x66, 0x07, 0x2C, 0x6F, 0x97, 0xE7, 0x31, 0xBA, 
		0x79, 0xB2, 0x34, 0xBD, 0xF6, 0xDF, 0x36, 0x0E, 0x62, 0xCB, 
		0x8C, 0x42, 0x92, 0x9D, 0xA5, 0x0B, 0x2D, 0xC5, 0x05, 0x98, 
		0x31, 0xB4, 0x3E, 0x7A, 0x43, 0xF4, 0x84, 0xA9, 0xB6, 0x67, 
		0x89, 0xBF, 0x78, 0xF0, 0x6F, 0x30, 0x01, 0x6C, 0x6F, 0xE7, 
		0xE6, 0xE2, 0xE4, 0xD6, 0x18, 0x5F, 0xC5, 0xFA, 0x3E, 0x06, 
		0xFB, 0xC5, 0x16, 0xF0, 0x7D, 0x52, 0x3E, 0x54, 0xEC, 0x7D, 
		0x56, 0x1B, 0x09, 0xD2, 0x05, 0xCE, 0x88, 0x1E, 0x42, 0x58, 
		0x98, 0x2C, 0x55, 0x5E, 0x2F, 0x2A, 0xEB, 0x4F, 0xA9, 0x3A, 
		0x0E, 0xD3, 0x0E, 0x23, 0x1B, 0x18
};
//1E0015F0
static int xcode_building_first_stage(struct cxdec_xcode_status *xcode)
{
  	switch (xcode_rand(xcode) % 3) {
  	case 2:
		// MOV ESI, EncryptionControlBlock
		// MOV EAX, DWORD PTR DS:[ESI+((xcode_rand(xcode) & 0x3ff) << 2)]
		if (!push_bytexcode(xcode, 0xbe)
				|| !push_dwordxcode(xcode, (DWORD)EncryptionControlBlock)
				|| !push_2bytesxcode(xcode, 0x8b, 0x86)
				|| !push_dwordxcode(xcode, (xcode_rand(xcode) & 0x3ff) << 2))
			return 0;
		break;
	case 1:
  		// MOV EAX, EDI
  		if (!push_2bytesxcode(xcode, 0x8b, 0xc7))
  			return 0;
		break;
  	case 0:
		// MOV EAX, xcode_rand(xcode)
		if (!push_bytexcode(xcode, 0xb8)
				|| !push_dwordxcode(xcode, xcode_rand(xcode)))
			return 0;
  		break;
  	}
  	return 1;
}
// 1E0016B0
static int xcode_building_stage0(struct cxdec_xcode_status *xcode, int stage)
{
	if (stage == 1)
		return xcode_building_first_stage(xcode);

    if (xcode_rand(xcode) & 1) {
		if (!xcode_building_stage1(xcode, stage - 1))
			return 0;
    } else {
		if (!xcode_building_stage0(xcode, stage - 1))
			return 0;
    }

    switch (xcode_rand(xcode) & 7) {
	case 1:
		// NOT EAX
		if (!push_2bytesxcode(xcode, 0xf7, 0xd0))
			return 0;
        break;
	case 3:
		// MOV ESI, EncryptionControlBlock
		// AND EAX, 3FFh
		// MOV EAX, DWORD PTR DS:[ESI+EAX*4]
        if (!push_bytexcode(xcode, 0xbe)
  				|| !push_dwordxcode(xcode, (DWORD)EncryptionControlBlock)
				|| !push_bytexcode(xcode, 0x25)
				|| !push_dwordxcode(xcode, 0x3ff)
				|| !push_3bytesxcode(xcode, 0x8b, 0x04, 0x86))
			return 0;
        break;
	case 0:
		// DEC EAX
		if (!push_bytexcode(xcode, 0x48))
			return 0;
        break;
	case 4:
		// NEG EAX
        if (!push_2bytesxcode(xcode, 0xf7, 0xd8))
			return 0;
		break;
	case 2:
        if (xcode_rand(xcode) & 1) {
        	// ADD EAX, xcode_rand(xcode)
			if (!push_bytexcode(xcode, 0x05))
            	return 0;
        } else {
        	// SUB EAX, xcode_rand(xcode)
			if (!push_bytexcode(xcode, 0x2d))
            	return 0;
        }
        if (!push_dwordxcode(xcode, xcode_rand(xcode)))
        	return 0;
        break;
	case 6:
		// PUSH EBX
		// MOV EBX, EAX
		// AND EBX, AAAAAAAA
		// AND EAX, 55555555
		// SHR EBX, 1
		// SHL EAX, 1
		// OR EAX, EBX
		// POP EBX
		if (!push_bytexcode(xcode, 0x53)
				|| !push_2bytesxcode(xcode, 0x89, 0xc3)
				|| !push_6bytesxcode(xcode, 0x81, 0xe3, 0xaa, 0xaa, 0xaa, 0xaa)
				|| !push_5bytesxcode(xcode, 0x25, 0x55, 0x55, 0x55, 0x55)
				|| !push_2bytesxcode(xcode, 0xd1, 0xeb)
				|| !push_2bytesxcode(xcode, 0xd1, 0xe0)
				|| !push_2bytesxcode(xcode, 0x09, 0xd8)
				|| !push_bytexcode(xcode, 0x5b))
			return 0;
		break;
	case 5:
		// INC EAX
		if (!push_bytexcode(xcode, 0x40))
			return 0;
		break;
	case 7:
		// XOR EAX, xcode_rand(xcode)
		if (!push_bytexcode(xcode, 0x35) 
				|| !push_dwordxcode(xcode, xcode_rand(xcode)))
			return 0;
        break;
	}
	return 1;
}
// 0x1E001900
static int xcode_building_stage1(struct cxdec_xcode_status *xcode, int stage)
{
	if (stage == 1)
		return xcode_building_first_stage(xcode);

	// PUSH EBX
	if (!push_bytexcode(xcode, 0x53))
		return 0;

	if (xcode_rand(xcode) & 1) {
		if (!xcode_building_stage1(xcode, stage - 1))
			return 0;
	} else {
		if (!xcode_building_stage0(xcode, stage - 1))
			return 0;
	}

	// MOV EBX, EAX
	if (!push_2bytesxcode(xcode, 0x89, 0xc3))
		return 0;

	if (xcode_rand(xcode) & 1) {
		if (!xcode_building_stage1(xcode, stage - 1))
			return 0;
	} else {
		if (!xcode_building_stage0(xcode, stage - 1))
			return 0;
	}

	switch (xcode_rand(xcode) % 6) {
	case 0:
		// ADD EAX, EBX
		if (!push_2bytesxcode(xcode, 0x01, 0xd8))
			return 0;
		break;
    case 1:
		// PUSH ECX
		// MOV ECX, EBX
		// AND ECX, 0F
		// SHR EAX, CL
		// POP ECX
		if (!push_bytexcode(xcode, 0x51)
				|| !push_2bytesxcode(xcode, 0x89, 0xd9)
				|| !push_3bytesxcode(xcode, 0x83, 0xe1, 0x0f)
				|| !push_2bytesxcode(xcode, 0xd3, 0xe8)
				|| !push_bytexcode(xcode, 0x59))
			return 0;
		break;
    case 4:
    	// PUSH ECX
    	// MOV ECX, EBX
    	// AND ECX, 0F
    	// SHL EAX, CL
    	// POP ECX
		if (!push_bytexcode(xcode, 0x51) 
				|| !push_2bytesxcode(xcode, 0x89, 0xd9)
				|| !push_3bytesxcode(xcode, 0x83, 0xe1, 0x0f)
				|| !push_2bytesxcode(xcode, 0xd3, 0xe0)
				|| !push_bytexcode(xcode, 0x59))
			return 0;
		break;
    case 3:
    	// NEG EAX, ADD EAX, EBX
		if (!push_2bytesxcode(xcode, 0xf7, 0xd8) 
				|| !push_2bytesxcode(xcode, 0x01, 0xd8))
			return 0;
		break;
    case 5:
    	// IMUL EAX, EBX
		if (!push_3bytesxcode(xcode, 0x0f,  0xaf, 0xc3))
			return 0;
		break;
    case 2:
    	// SUB EAX, EBX
		if (!push_2bytesxcode(xcode, 0x29, 0xd8))
			return 0;
		break;
	}
	// POP EBX
	return push_bytexcode(xcode, 0x5b);
}

struct cxdec_callback colorfulcure_cxdec_callback = {
	"colorfulcure",
	{ 0x2e3, 0x718 },
	xcode_building_stage1
};
