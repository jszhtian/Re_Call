// CHParser.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include <iostream>
#include <vector>
#include <fstream>
#include <string>

using namespace std;
struct OpBlock
{
	uint32_t Op;
	uint32_t Len;
	uint32_t para0, para1, para2, para3;
};
int main(int argc, char* argv[])
{
    if(argc!=2)
    {
		cout << "Usage:" << argv[0] << " asb file";
    }
	fstream fst;
	vector<string> TextList;
	fst.open(argv[1], ios::binary | ios::in);
	int Filesize;
	fst.seekg(0, ios::end);
	Filesize = fst.tellg();
	char* TMPBlock;
	TMPBlock = new char[Filesize];
	fst.seekg(0x0, ios::beg);
	fst.read(TMPBlock, Filesize);
	fst.close();
	int RPtr = 0;
	while(RPtr< Filesize)
	{
		char* CurPtr = TMPBlock + RPtr;
		OpBlock* OpBlk = (OpBlock*)CurPtr;
		if(OpBlk->Op==0)
		{
			break;//EOF Flag
		}
		if(OpBlk->Len>sizeof(OpBlock))
		{
			char* TxtPtr = CurPtr + sizeof(OpBlock);
			string txt(TxtPtr);
			TextList.push_back(txt);
		}
		RPtr += OpBlk->Len;
	}
	string outname = argv[1];
	outname += ".txt";
	ofstream fout(outname);
	for(auto var:TextList)
	{
		fout << var;
		fout << endl;
	}
	fout.close();
}

// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门使用技巧: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
