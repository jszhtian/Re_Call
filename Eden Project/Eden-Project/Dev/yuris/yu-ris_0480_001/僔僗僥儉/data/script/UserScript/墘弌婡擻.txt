//--------------------------------------------------------------------
//
// β４演出１
//
//--------------------------------------------------------------------
#=BETA4_DIRECTION_1

\BGM(bgm03)

\BG.CMXYZ(80, -80, 080)
\BG(bg_030, , 0, 0)

\CM.ZXYZ(0, 0, 0, 5000)
\CM.GO

β４のスプライトの説明をおこないます。

\BG.CMXYZ(0, 0, 0)
\BG(bg_040, , 1000, 0)

それではまず、背景を拡大してみます。

\CM.SXYZ(0, 0, 50, 2000, 0)
\CM.GO
\SP.WA

β３まで存在していた『スプライトの拡大サイズの制限』がなくなり、自由に拡大できるようになりました。

さらに拡大してみます。

\CM.SXYZ(0, 0, 150, 2500, 0)
\CM.GO
\SP.WA

これでようやく背景やイベントＣＧ等の拡大縮小が事実上可能になります。

今度は慣性をつけて縮小してみます。

\CM.SXYZ(0, 0, -200, 1500, 1)
\CM.GO
\SP.WA

こんな感じです。

次に、β４の演出面での目玉機能を説明します。

β４より、新しく『カメラ』という概念が生まれました。

今見ている画面は『カメラ』を通して見ている映像だと思ってください。

実は今さっきの演出がそうだったのですが、『背景自体を拡大縮小』したわけではなく、『カメラ』を動かして演出しました。

もう一度演出してみます。今度は演出しながら説明していきます。

\CM.SXYZ(0, 0, 50, 3000, 0)
\CM.GO

この演出ですが、カメラを前に動かして背景の位置まで近づけることで実現しています。

この前後させる動作のため、ＸＹ座標の他に『Ｚ座標』という概念が加わります。

Ｚ座標を大きくするほど前に移動、小さくするほど後ろへ移動します。

もちろんＸＹ移動もできます。

\CM.SXYZ(-200, -50, 50, 3000)
\CM.GO

ＸＹＺをそれぞれ動かすことで、本物のカメラのように自在に操ることが出来ます。

カメラの位置指定も『相対座標指定』『絶対座標指定』と選べますので、右へ１００ピクセル分移動させたいとか、この位置まで移動させたいとかも、自由自在です。

\CM.ZXYZ(0, 0, 0, 1500)
\CM.GO

初期位置へ移動させてみました。

そしてこのカメラが真価を発揮するのが、次のような演出です。

優理「あ、こんにちは……」

\SP.ST("YUU_1A01")
\SP.2XYZ(-050, -050, 280, 0, -050, 230, 1000)
\SP.2A(0, 256, 1000)
\SP.GO(YUURI)

\CM.SXYZ(-030, 0, 30, 1000)
\CM.GO
\SP.WA

わかりましたでしょうか。

今の演出は、立ち絵をこちらへ近づけつつ、カメラを前に動かして実現しました。

素材が腰までしか無いので切れて不自然になってしまっていましたが、ちゃんと足のほうまで描いておけば普通に自然になります。

カメラだけでなく、スプライト自身にももちろんＺ座標の概念がありますので、立ち絵を近づけたり遠ざけたりという演出ができるようになりました。

\SP.SXYZ(200, 0, 50, 1500)
\SP.GO(YUURI)

ＸＹＺをそれぞれ動かせば、好きな位置にキャラを立たせることが可能ということになります。

\SP.SXYZ(050, 0, -50, 1000)
\SP.GO(YUURI)

これにより、擬似的な３Ｄ空間としての制御が可能になり、奥行きのある演出表現をできるようになります。

\SP.SXYZ(-300, 0, -80, 1500)
\SP.GO(YUURI)

ただ拡大しすぎると粗くなったりぼやけてしまいますので、立ち絵の演出の扱いには注意が必要です。

\SP.ST("YUU_1A01", 1500)
\SP.SXYZ(050, 0, 80, 1500)
\SP.GO(YUURI)

ちなみに擬似的な３Ｄ空間を表現できるようになったといっても、DirectXの機能は一切使用していませんので、

高いビデオカード性能を必要とすることは特にありません。

ただCPUに関しては、β３の時と比べるとどうしても推奨スペックの値は少し上がってしまうかと思います。

これは演出の質自体が上がっていく以上、どうしても避けられない問題です。

とはいっても拡大縮小を演出に用いない場合は、β３までとほぼ同じ負荷で動かすことが出来ます。

また、拡大縮小の質も『高画質』『低画質』の２種類から選択できますので、低スペック重視の方は低画質を設定してもらえれば軽くなります。

ちなみにこのサンプルは『高画質』に設定されています。

次に、周期系命令というものが新たに用意されます。

次のようなものです。

\SP.CLX(080, 1500, @INF)
\SP.GO(YUURI)

立ち絵が常に左右に周期的に揺れていますが、このままゲームを進行させる事が可能になりました。

キャラが慌てたり震えたりする演出をはじめ、いろいろ応用して使えるかと思います。

ＸＹＺそれぞれ別々に周期が設定できるので、さらに追加で前後に動かすことも出来ます。

試しにやってみましょう。

\SP.CLZ(030, 3000, @INF)
\SP.GO(YUURI)

Ｚ軸の周期を設定してみました。

では、このままカメラを動かしてみます。

\CM.SXYZ(0, 0, 100, 1500)
\CM.GO
\SP.WA(CM)

近づけてみました。

\CM.SXYZ(0, 0, -050, 1500)
\CM.GO
\SP.WA(CM)

遠ざけてみました。

ちなみに周期系命令はスプライトだけでなく、カメラに対しても設定することができます。
それでは、このままカメラも周期系命令で動かしてみます。

\CM.CLX(80, 2500, @INF)
\CM.GO

左右に振ってみます。

\CM.CLY(80, 2000, @INF)
\CM.GO

さらに追加で上下にも振ってみます。

\CM.CLZ(40, 1750, @INF)
\CM.GO

さらに追加で前後にも振ってみます。

…もう何がなんだか分かりません＠

あ、ちなみにこの「＃」「＠」などのマークも外字機能という新機能になります。画像を自由に文字として扱えます。

\SP.FINISH(YUURI)
\SP.FINISH(LNO_CM)

元に戻します。

\SP.ZYZ(-020, 200, 500)
\SP.GO(YUURI)

\CM.ZXYZ(0,0,0,500)
\CM.GO

このようにβ４では演出で表現できる幅が向上しました。

\WA(500)

次に、トランジションに関して。

スプライトに対してトランジションがかけられるようになりました。

\SP.TR(11)
\SP.2TP(256,0,1000)
\SP.GO(YUURI)

立ち絵スプライトをトランジションで消去しました。

\SP.TR(12)
\SP.2TP(0,256,1000)
\SP.GO(YUURI)

もう一度表示させてみました。

\SP.TR(11)
\SP.2TP(256,128,500)
\SP.GO(YUURI)

今度は途中で止めてみました。

\SP.TR(11)
\SP.2TP(128,256,500)
\SP.GO(YUURI)

そこから元に戻してみました。

他に、立ち絵を動かしながらのトランジション、なんていうのも可能です。

\SP.TR(11)
\SP.SXYZ(0,0,-50,1000,0)
\SP.2TP(256,0,1000)
\SP.GO(YUURI)

\SP.WA
\SP.DEL(YUURI)

\WA(500)

このように、これも使い方次第で、多様な演出ができるのではないかと思います。

今までやってみたかった演出がこの中にあれば、ぜひβ４で実現してみてください。

以上、演出面の説明でした。

\FOUT(1500, 5) //幕を下ろす

\BGM(,1000)

\WA(1000)

\FIN(0) //幕を上げる

\GO(演出機能)




//--------------------------------------------------------------------
//
// β４演出２
//
//--------------------------------------------------------------------
#=BETA4_DIRECTION_2

\BGM(bgm03)


\BG.CMXYZ(0, 0, 0)
\BG(bg_040, , 1000, 0)

β４のスプライト説明その２です。

まず、表示非表示機能について説明します。


\SP.ST("YUU_1A01")
\SP.ZXYZ(050, -050, 200, 0)
\SP.2A(0, 256, 500)
\SP.GO(YUURI)
\SP.WA

β４の表示非表示機能は、表示値という０から２５６までの値をもつ値で、１２８以上ならスプライトを表示、１２８未満なら非表示にする、という機能です。
漫符で説明していきます。

\SP.CG("manpu",,1)
\SP.ZXYZ(250, 125, 200, 0)
\SP.2A(0, 256, 300)
\SP.GO(MANPU)

立ち絵に漫符を表示しました。
この漫符を、表示値を０にして非表示にしてみます。

\SP.ZH(0, 0)
\SP.GO(MANPU)

非表示にしました。
次に表示値を２５６にして、再度表示してみます。

\SP.ZH(256, 0)
\SP.GO(MANPU)

もう一度表示しました。
これだけなら、不透明度（Ａ）の値をいじることでも同じことができますが、真価を発揮するのは次のような演出です。

次に、表示値を周期命令を使って変更してみます。

\SP.CLH(-200, 1000, 0, 1)
\SP.GO(MANPU)

\WA(1000)

このように、スプライトの表示・非表示が繰り返されるようになり、点滅表現が可能になりました。

これだけの機能ではありますが、いろいろと使えるかと思います。

\SP.ZA(0, 500)
\SP.GO(MANPU)
\SP.ZA(0, 500)
\SP.GO(YUURI)
\SP.WA(YUURI)
\SP.FINISH(MANPU)
\SP.FINISH(YUURI)
\SP.DEL(MANPU)
\SP.DEL(YUURI)

\WA(500)

次に、連続演出機能について説明します。

β４の新機能として、\Rゲームを進行しながらのスプライトの連続演出が\R出来るようになりました。

いままでは、移動Ａ→移動Ｂ→移動Ｃ　といった連続した演出を行いたい場合…、

\SP.CG(ev030,,1)
\SP.2A(0,256,500)
\SP.2XY(150,150,150,150,300)
\SP.GO(TIP1)
\SP.CG(ev030,,1)
\SP.2A(0,256,500)
\SP.2XY(450,450,450,450,300)
\SP.GO(TIP2)
\SP.GO()
\SP.WA(TIP1)

\SP.ZXY(450,150,1200,0)
\SP.GO(TIP1)
\SP.ZXY(150,450,1200,0)
\SP.GO(TIP2)
\SP.GO()
\SP.WA(TIP1)

\SP.ZXY(450,450,1200,0)
\SP.GO(TIP1)
\SP.ZXY(150,150,1200,0)
\SP.GO(TIP2)
\SP.GO()
\SP.WA(TIP1)

\SP.ZXY(150,450,1200,0)
\SP.GO(TIP1)
\SP.ZXY(450,150,1200,0)
\SP.GO(TIP2)
\SP.GO()
\SP.WA(TIP1)


このように、演出中はゲーム進行を完全に停止するか、

\SP.ZA(0,500)
\SP.GO(TIP1)
\SP.ZA(0,500)
\SP.GO(TIP2)
\SP.GO()

または、ゲーム進行しながら演出したい場合は、

\SP.FINISH(TIP1)
\SP.FINISH(TIP2)
\WA(1)

\SP.2A(0,256,500)
\SP.2XY(150,150,150,150,300)
\SP.GO(TIP1)
\SP.2A(0,256,500)
\SP.2XY(450,450,450,450,300)
\SP.GO(TIP2)
\SP.GO()
\SP.WA(TIP1)

\SP.ZXY(450,150,1200,0)
\SP.GO(TIP1)
\SP.ZXY(150,450,1200,0)
\SP.GO(TIP2)
\SP.GO()

このように…、

\SP.ZXY(450,450,1200,0)
\SP.GO(TIP1)
\SP.ZXY(150,150,1200,0)
\SP.GO(TIP2)
\SP.GO()

１文章につきスプライト毎に１つの演出しか挟めませんでした。

\SP.ZXY(150,450,1200,0)
\SP.GO(TIP1)
\SP.ZXY(450,150,1200,0)
\SP.GO(TIP2)
\SP.GO()

β４ではこれが改善され、

\SP.ZA(0,500)
\SP.GO(TIP1)
\SP.ZA(0,500)
\SP.GO(TIP2)
\SP.GO()

ゲーム進行とは独立した連続演出が可能になりました。

\SP.FINISH(TIP1)
\SP.FINISH(TIP2)
\WA(1)

\SP.2A(0,256,500)
\SP.2XY(150,150,150,150,300)
\SP.GO(TIP1, DIR1)
\SP.2A(0,256,500)
\SP.2XY(450,450,450,450,300)
\SP.GO(TIP2, DIR2)
\SP.GO()
\SP.WA(TIP1)

それでは、連続演出機能を利用して演出してみます。

\SP.ZXY(450,150,1200,0)
\SP.GO(TIP1, DIR1)
\SP.ZXY(450,450,1200,0)
\SP.GO(TIP1, DIR1)
\SP.ZXY(150,450,1200,0)
\SP.GO(TIP1, DIR1)
\SP.ZXY(150,150,1200,0)
\SP.GO(TIP1, DIR1)
\SP.ZXY(450,150,1200,0)
\SP.GO(TIP1, DIR1)
\SP.ZXY(450,450,1200,0)
\SP.GO(TIP1, DIR1)
\SP.ZXY(150,450,1200,0)
\SP.GO(TIP1, DIR1)
\SP.ZXY(150,150,1200,0)
\SP.GO(TIP1, DIR1)

\SP.ZXY(150,450,1200,0)
\SP.GO(TIP2, DIR2)
\SP.ZXY(150,150,1200,0)
\SP.GO(TIP2, DIR2)
\SP.ZXY(450,150,1200,0)
\SP.GO(TIP2, DIR2)
\SP.ZXY(450,450,1200,0)
\SP.GO(TIP2, DIR2)
\SP.ZXY(150,450,1200,0)
\SP.GO(TIP2, DIR2)
\SP.ZXY(150,150,1200,0)
\SP.GO(TIP2, DIR2)
\SP.ZXY(450,150,1200,0)
\SP.GO(TIP2, DIR2)
\SP.ZXY(450,450,1200,0)
\SP.GO(TIP2, DIR2)

\SP.GO(TIP1)
\SP.GO(TIP2)

このように、連続した演出をさせながら、それとは独立してゲームが進行しています。

もちろん座標移動だけでなく、不透明度の変更や、倍率の変更、画像の変更など、なんでも連続して演出できます。

なので、たとえば次のような演出も可能になりました。

\SP.ZA(0,500)
\SP.GO(TIP1)
\SP.ZA(0,500)
\SP.GO(TIP2)
\SP.GO(TIP1)
\SP.GO(TIP2)


\SP.ST("YUU_1A03")
\SP.ZXYZ(50, -050, 200.05, 0)
\SP.2A(0, 256, 1000)
\SP.GO(YUURI, STD1)
\SP.WA(YUURI)

立ち絵の演出で…、

\SP.FINISH(TIP1)
\SP.FINISH(TIP2)
\WA(1)
\SP.DEL(TIP1)
\SP.DEL(TIP2)


\SP.GO(YUURI, STD1)
\SP.ST("YUU_1A07", 500)
\SP.GO(YUURI, STD1)
\SP.NOP(1500)
\SP.GO(YUURI, STD1)
\SP.ST("YUU_1A02", 300)
\SP.GO(YUURI, STD1)
\SP.NOP(1500)
\SP.GO(YUURI, STD1)
\SP.SX(-80, 800)
\SP.ZA(0, 800)
\SP.GO(YUURI, STD1)

…このように、ゲーム進行させながら、数秒後に違う表情やポーズに変化したり、出たり消えたりする、という演出が容易にできるようになりました。

//曲名表示演出
\SP.CG(tip_bgm,,1)
\SP.2A(0,256,1500)
\SP.2XY(900,420,720,420,1500)
\SP.GO(BGM, BGM)

\SP.NOP(2000)
\SP.GO(BGM, BGM)

\SP.2A(256,0,1500)
\SP.2X(720,900,1500)
\SP.GO(BGM, BGM)

他にも、ＢＧＭ再生時の曲名表示や…、

\SP.CG(tip_staff1,,1)
\SP.2A(0,256,1500)
\SP.2Y(090,090,0)
\SP.2X(080,120,1500)
\SP.GO(STAFF, DIR1)
\SP.NOP(2000)
\SP.GO(STAFF, DIR1)
\SP.2A(256,0,1500)
\SP.2X(120,080,1500)
\SP.GO(STAFF, DIR1)
\SP.CG(tip_staff2,,1)
\SP.2A(0,256,1500)
\SP.2Y(090,090,0)
\SP.2X(080,120,1500)
\SP.GO(STAFF, DIR1)
\SP.NOP(2000)
\SP.GO(STAFF, DIR1)
\SP.2A(256,0,1500)
\SP.2X(120,080,1500)
\SP.GO(STAFF, DIR1)



ゲーム冒頭やトゥルーエンド時での、ゲーム進行しながらのスタッフロールなど…、

演出の可能性はたくさん広がるかと思います。

\SP.FINISH(BGM)
\SP.FINISH(YUURI)
\WA(1,1)
\SP.DEL(BGM)
\SP.DEL(YUURI)

それと、F12キーでスプライトマップビューウィンドウを開いてみてください。（これ自体の説明は『開発補助機能』のサンプルをご覧下さい）

ウィンドウが開いたら、テンキーの「／」（スラッシュ）キーを押してみてください。

ウィンドウ下部に表示されるリスト表示が切り替わり、スプライト一覧表示の代わりに現在実行中や待機中の演出リスト一覧が表示されます。

リスト表示は「／」キーを押す度に切り替わります。

宜しければ、この演出リストを見ながら、軽くもう一度\R『演出２』のサンプルを見てみてください。

以上、演出機能その２でした。

\FOUT(1500, 5) //幕を下ろす

\BGM(,1000)

\WA(1000)

\FIN(0) //幕を上げる

\GO(演出機能)




//--------------------------------------------------------------------
//
// β４演出３
//
//--------------------------------------------------------------------
#=BETA4_DIRECTION_3

\BGM(bgm03)


\BG.CMXYZ(0, 0, 0)
\BG(bg_040, , 1000, 0)


β４のスプライト説明その３です。

まず、彩度明度指定機能について説明します。

画像を彩度や明度を指定して読み込むことができるようになりました。

\SD(0)

\SP.BG(bg_040)
\SP.ZBXY(020,020,0)
\SP.ZXY(-200,0,500)
\SP.ZA(256,800)
\SP.GO(BG1)

//\WA(300)

\SD(128)
\MD(0x105070)

\SP.BG(bg_040)
\SP.ZBXY(020,020,0)
\SP.ZXY(0,0,500)
\SP.ZA(256,800)
\SP.GO(BG2)

//\WA(300)

\MD(0xd0a040)

\SP.BG(bg_040)
\SP.ZBXY(020,020,0)
\SP.ZXY(200,0,500)
\SP.ZA(256,800)
\SP.GO(BG3)

\SD(128)
\MD(0x808080)

同じ画像を、それぞれ彩度や明度を変更して読み込んでみました。

この機能により、例えば夕方や夜の効果を、わざわざ絵を用意しなくても演出できたり、昔の回想などでセピアっぽい表現、なんていうのも可能になります。

いろいろ試してみていただければと思います。

\SP.ZA(0,800)
\SP.ZXY(0,0,500)
\SP.GO(BG1)
\SP.ZA(0,800)
\SP.ZXY(0,0,500)
\SP.GO(BG2)
\SP.ZA(0,800)
\SP.ZXY(0,0,500)
\SP.GO(BG3)

\WA(1000)

\SP.DEL(BG1)
\SP.DEL(BG2)
\SP.DEL(BG3)

\WA(500)

次に、スプライトにテキスト（文字列変数の中身）を表示する機能が利用できるようになりました。

\SP.ECG(450,40)
\SP.ZXY(8,0,0)
\SP.TXL(0011,L)
\SP.2A(0,256,0)
\SP.GO(TX)

空のレイヤを作成し、変数とフォントを関連づけ、

$L(11)="ＹＵ−ＲＩＳ　β４"

あとは変数に文字列を格納すれば、自動的に文字列が表示されます。

変数の中身を更新すると、文字列も自動的に変化するという機能を持っています。

$L(11)="第一章　きゅーたろーの旅立ち"

文字列変数の中身を変えました。

\SP.CLZ(30,2000,0)
\SP.GO(TX)

そしてもちろんスプライトですので拡大縮小などが利用できます。

これを使用することで、画面上へのタイトル表示やステータス表示などが可能になるかと思います。

表示できる行数は１行ですが、スプライトを複数用意して連結すれば、実質複数行表示も可能です。

いろいろ便利だと思うので、ぜひ使ってみてください。

\WA(500)

次に、レイヤ移動量設定機能が利用可能になりました。

\CM.SXYZ(0,0,30,800)
\CM.GO

\SP.ST("YUU_1A01")
\SP.2XYZ(050, -050, 250, 050, -050, 230, 800)
\SP.2A(0, 256, 500)
\SP.MXY(150,150)
\SP.GO(YUURI)

\SP.SZ(-70, 800)
\SP.MXYZ(300,300,300)
\SP.GO(TX)

\SP.WA(YUURI)

$L(11)="カメラを動かしてみてください。"

この状態で、テンキーの「８」「２」「４」「６」キーでカメラを上下左右に動かしてみてください。

$L(11)="スプライト毎に移動量が違います。"

「背景」「立ち絵」「文字列スプライト」それぞれで動く量が違うのが分かると思います。

$L(11)="擬似的な立体的表現が可能です。"

これにより、疑似的にですが、より立体的な表現が可能になります。

\SP.ZA(0,1000)
\SP.GO(YUURI)
\SP.ZA(0,1000)
\SP.GO(TX)

\WA(1000)

\SP.DEL(YUURI)
\SP.DEL(TX)

\WA(500)

以上、演出機能その３でした。

\FOUT(1500, 5) //幕を下ろす

\BGM(,1000)

\WA(1000)

\FIN(0) //幕を上げる

\GO(演出機能)





//--------------------------------------------------------------------
//
// ムービー
//
//--------------------------------------------------------------------
#=BETA4_MOVIE


\BGM(bgm03)


\BG.CMXYZ(0, 0, 0)
\BG(bg_040, , 0, 0)

ムービー機能の説明をします。

YU-RIS β4から、独自形式であるYMVムービーというものを扱えるようになりました。

このムービーは「映像のみ」「音声なし」「最高30fpsまで」等の制限があるものの、

演出用途に特化されており、ムービーを普通のスプライトとして利用することが出来ます。

さっそく読み込んでみます。

//\GO(aaaa)

\SP.ANMV(sample2)
\SP.ZA(256, 1000)
\SP.ZXYZ(0,-10,200,0)
\SP.GO(MV)

YMVムービーを読み込みました。

このムービーは普通のスプライトとして扱うことが出来ますので、

\SP.ZXYZ(0,0,100,1000)
\SP.GO(MV)

このように拡大させたり、

\SP.ZXYZ(0,0,300,1000)
\SP.GO(MV)

縮小させたりできます。\R（正確には今の演出はＺ座標の移動です。もちろん％指定によるスプライト自身の拡大縮小もできます）

\SP.2A(256,096,1000)
\SP.SXY(-300,50,1000)
\SP.GO(MV)

もちろん移動したり、透明度を変えたりもできます。

\SP.2A(096,0,500)
\SP.GO(MV)
\SP.WA(MV)
\SP.DEL(MV)

\WA(500)

さらに、このムービーのもうひとつの大きな特徴として、\Rαチャンネルムービーに対応しています。\Rですので、

\SP.ANMV(sample3)
\SP.ZA(256, 1000)
\SP.ZXYZ(0,0,200,0)
\SP.GO(MV)

例えばこのような形の動画も可能になりますし、

\SP.2A(256,0,500)
\SP.GO(MV)
\SP.WA(MV)
\SP.DEL(MV)

\WA(100)

\SP.ANMV(rain)
\SP.ZA(256, 1000)
\SP.ZXYZ(0,0,200,0)
\SP.GO(MV)

雨の動画を作成すれば、雨の演出に使えたりと、普通のムービーとは全く違い、かなり演出の可能性が広がります。

通常のスプライト処理では出来ないような演出に、ぜひ使ってみてください。

ただ、この動画機能は比較的重めの演出ですので、ゲームに使用する場合は、サイズやフレームレートにもよりますが、ゲームのスペックの決定に少し注意が必要です。

最低スペックとして Pentium4-1.5GHz 以上、\R推奨スペックとして Pentium4-2.0GHz 以上ぐらいを\R見ておいてください。

\WA(300)

他には、この独自形式ムービーの作成にあたって、ムービー変換ツール「YSYmv.exe」が一緒に同梱されます。

詳細や使い方に関してはリリース後に説明します。

ムービー機能の説明は以上です。

\FOUT(1500, 5) //幕を下ろす

\BGM(,1000)

\WA(1000)

\FIN(0) //幕を上げる

\GO(演出機能)





//--------------------------------------------------------------------
//
// アニメ進行サンプル
//
//--------------------------------------------------------------------
#=アニメ進行サンプル


\BGM(BGM03)


\BG.CMXYZ(0, 0, 0)
\BG(bg_040, , 800, 0)


アニメ進行サンプルです。



\SP.ANCG("ani_", 8, 200)
\SP.ANLP(0) //ループ設定(ループ回数)
\SP.ZA(256, 0) //0秒かけてA値を256へ
\SP.ZXYZ(0,0,100,0)
\SP.GO(ANI)

連番画像によるアニメ。

\SP.DEL(ANI)


//sample2.ymv をスプライトとして読み込みます。
//デフォルトでは pac フォルダ内を読みに行きます。
//
\SP.ANMV(sample2)
\SP.ZA(256, 0) //0秒かけてA値を256へ
\SP.ZXYZ(0,0,100,0) //このムービーファイルは400x300なので倍の大きさで表示されるようにZ値を100に.
\SP.GO(MV)

ムービーによるアニメ。

あいうえお
かきくけこ
さしすせそ

\SEL.GO(MOVIESAMPLE_L1, MOVIESAMPLE_L2, MOVIESAMPLE_L3)
\SEL(選択肢１, 選択肢２, 選択肢３)


#=MOVIESAMPLE_L1

１番を選択しました。

\GO(MOVIESAMPLE_L9)

#=MOVIESAMPLE_L2

２番を選択しました。

\GO(MOVIESAMPLE_L9)

#=MOVIESAMPLE_L3

３番を選択しました。

\GO(MOVIESAMPLE_L9)


#=MOVIESAMPLE_L9

ムービーを終了します。

\SP.DEL(MV)

終了しました。


\FOUT(1500, 5) //幕を下ろす

\BGM(,1000)

\WA(1000)

\FIN(0) //幕を上げる

\GO(演出機能)



