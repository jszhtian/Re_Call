//============================================================================
//
//■ログ
//
//============================================================================

//■スタティック変数宣言
{
	S_STR[$BID="ES.LOG."]

	S_INT[@LOG.TL.X=36]
	S_INT[@LOG.TL.SX=680]
	S_INT[@LOG.TL.SY=72]
	S_INT[@LOG.TL.SPACE.Y=80]
	S_INT[@LOG.TX.SX]
	S_INT[@LOG.TX.SY]
	S_INT[@LOG.TX.SPACE.X]
	S_INT[@LOG.TX.SPACE.Y]
	S_INT[@LOG.VOICE.SY(5)]

	S_INT[@LOG.PAGE.NUM]		// １画面に表示するログの個数
	S_INT[@LOG.PAGE.MAX]		// ログ最大頁数
	S_INT[@LOG.SCROLL.NUM]		// スクロールアニメーション数
	S_INT[@LOG.NUM]				// 現在のログ蓄積数
	S_INT[@LOG.CURNO]			// 現在開いている頁

	S_STR[$LOG.TX(\.LOG.SIZE+1)]
	S_STR[$LOG.TX.NAME(\.LOG.SIZE+1)]
	S_STR[$LOG.TX.TASK(\.LOG.SIZE+1)]
	S_STR[$LOG.VO(\.LOG.SIZE+1)]

	S_INT[@LOG.Y(16)]
	S_INT[@LOG.LNO(16)]
	S_STR[$LOG.VO2(16)]

	S_INT[@TX.SX]				// 文字Ｘサイズ
	S_INT[@TX.SY]				// 文字Ｙサイズ
	S_INT[@TX.COLOR]			// 文字色１
	S_INT[@TX.COLOR2]			// 文字色２
	S_INT[@TX.BOLD]				// 太字
	S_INT[@TX.SHADE.X]			// 文字影座標Ｘ
	S_INT[@TX.SHADE.Y]			// 文字影座標Ｙ
	S_INT[@TX.SHADE.COLOR]		// 文字影色
	S_INT[@TX.OUTLINE.COLOR]	// 文字袋文字色
	S_STR[$TX.FONT]				// 文字フォント

	S_INT[@NAMEFLAG]
	S_INT[@VOICEPLAYFLAG]
	S_INT[@PushFlag]

	S_INT[@LOG.ADDTIMING]		// ログを追加するタイミング(1=表示中のテキストも追加される)

	S_INT[@Z.NUM]
	S_INT[@Z.LOG]

	S_STR[$fonttemp]

	S_INT[@es.LOG.VOICE.STOP.FLAG] //ログを抜けたときにボイスを停止するフラグ.いずれシーン機能で代用.

	S_INT[@logw.x=+46] ///x

}


#=ES.LOG.DEFINE.INIT
{
	//----------------------------------------------------------------
	// 文字情報取得
	//----------------------------------------------------------------
		GOSUB[#=es.TDDEF.SEARCH pstr=$T(21,21)]
		@TX.SX = @_RINT(1) / 65536
		@TX.SY = @_RINT(1) % 65536
		@TX.COLOR  = @_RINT(2)
		@TX.COLOR2 = @_RINT(3)
		@TX.BOLD = @_RINT(4)
		@TX.SHADE.X = @_RINT(5) / 65536
		@TX.SHADE.Y = @_RINT(5) % 65536
		@TX.SHADE.COLOR = @_RINT(6)
		@TX.OUTLINE.COLOR = @_RINT(7)
		$TX.FONT = $_RSTR(8)

	//----------------------------------------------------------------
	// 変数設定
	//----------------------------------------------------------------
		@LOG.ADDTIMING		= @T(21,04)
		@LOG.TL.X			= @T(21,13)
		@LOG.TL.SX			= @T(21,15)
		@LOG.TL.SY			= @T(21,16)
		@LOG.TL.SPACE.Y		= @T(21,14)
		@LOG.TX.SX			= @TX.SX
		@LOG.TX.SY			= @TX.SY
		@LOG.TX.SPACE.X		= @T(21,22)
		@LOG.TX.SPACE.Y		= @T(21,23)
		@LOG.PAGE.NUM		= @T(21,01)
		@LOG.PAGE.MAX		= @T(21,02)
		@LOG.SCROLL.NUM		= @T(21,03)

		IF[@LOG.PAGE.NUM<1 || @LOG.PAGE.NUM>12] \_mes("[バックログ設計]１ページに表示するログ頁数の値が不正です。");END[] IFEND[]
		IF[@LOG.PAGE.MAX<1 || @LOG.PAGE.MAX>(\.LOG.SIZE)] \_mes("[バックログ設計]最大ログ頁数の値が不正です。");END[] IFEND[]

		GOSUB[#=es.LOG.CLEAR]

	return[]
}

//--------------------------------------------------------------------
//■INIT
//--------------------------------------------------------------------
#=ES.LOG.INIT
{

/*
DEBUGLIST[ADD=@VOICEPLAYFLAG  STR="@VOICEPLAYFLAG"]
DEBUGLIST[ADD=@LOG.NUM        STR="@LOG.NUM"]
DEBUGLIST[ADD=@LOG.CURNO      STR="@LOG.CURNO"]
LOOP[SET=5] DEBUGLIST[ADD=$LOG.TX(@_LC-1) STR="$LOG.TX"] LOOPEND[]
LOOP[SET=5] DEBUGLIST[ADD=$LOG.TX.TASK(@_LC-1) STR="$LOG.TX.TASK"] LOOPEND[]
*/

	//----------------------------------------------------------------
	// ボイス再生
	//----------------------------------------------------------------
		\_gosub($BID+"VoicePlay.1")

	//----------------------------------------------------------------
	// 
	//----------------------------------------------------------------
		@Z.LOG = @es.Z.BT+900000*@es.ZEX	//テキスト
		@Z.NUM = 60000000000000+3			//数字
	
		@LOG.CURNO=-(@LOG.PAGE.NUM/2)		//現在開いている頁 の初期化

	//----------------------------------------------------------------
	// 
	//----------------------------------------------------------------
//		\BT.W0.ALL(ES.SEL)

		//\BTDEF.LOAD("ES.LOG")

		\BT.ES20($BID+"BTN.PLATE")
		\BT.ES20($BID+"BTN.VOICE")

	//----------------------------------------------------------------
	// フォント変更
	//----------------------------------------------------------------
		IF[$TX.FONT!=""]
			\_txfont($TX.FONT)
			$fonttemp = $_RSTR(1)
		IFEND[]

	//----------------------------------------------------------------
	// 数値画像読込
	//----------------------------------------------------------------
		GOSUB[#=ES.LOG.Num.Load]

	//----------------------------------------------------------------
	// ログレイヤ生成.
	//----------------------------------------------------------------
		//レイヤセット
	//	CG[ID="LOG/" Z=@Z.LOG E=1 SX=@LOG.TL.X+@LOG.TL.SX SY=(@LOG.TL.SPACE.Y)*@LOG.PAGE.NUM X=@T(21,11) Y=@T(21,12) MODE=0]


	STR[$ID]
	INT[@btno]

		LOOP[SET=@LOG.PAGE.NUM+2]
		{
			@LOG.LNO(@_LC) = @_LC
			@LOG.Y(@_LC)   = (@_LC-2) * (@LOG.TL.SPACE.Y)

			CG[ID="LOGTX"+$(@_LC) SX=@LOG.TL.SX SY=@LOG.TL.SY X=@LOG.TL.X Y=@T(21,12)+@LOG.Y(@_LC) Z=@Z.LOG+@_LC E=1 FILE=""]
			CGACT[ID="LOGTX"+$(@_LC) RECTPAINT3=1 SET=@es.COL.CLEAR]


			\BT.ID.OFF.GET($BID+"BTN.VOICE", 0)($ID)

				CG[ID="LOG.VO1"+$(@_LC) Z=@Z.LOG E=1 X=@T(21,11)-1000 Y=@T(21,12)+@T(21,32)+@LOG.Y(@_LC) FILE=""]
			//	CGACT[ID="LOG.VO1.BUF" ID2="LOG.VO1"+$(@_LC) COPY2=1]
				CGACT[ID=$ID ID2="LOG.VO1"+$(@_LC) COPY2=1]
				CGINFO[ID=$ID SY=1 LET=@LOG.VOICE.SY(1)]

			\BT.ID.OVER.GET($BID+"BTN.VOICE", 0)($ID)

				CG[ID="LOG.VO2"+$(@_LC) Z=@Z.LOG E=0 X=@T(21,11)-1000 Y=@T(21,12)+@T(21,32)+@LOG.Y(@_LC) FILE=""]
			//	CGACT[ID="LOG.VO2.BUF" ID2="LOG.VO2"+$(@_LC) COPY2=1]
				CGACT[ID=$ID ID2="LOG.VO2"+$(@_LC) COPY2=1]
				CGINFO[ID=$ID SY=1 LET=@LOG.VOICE.SY(2)]

			\BT.ID.ON.GET($BID+"BTN.VOICE", 0)($ID)

				CG[ID="LOG.VO3"+$(@_LC) Z=@Z.LOG E=0 X=@T(21,11)-1000 Y=@T(21,12)+@T(21,32)+@LOG.Y(@_LC) FILE=""]
			//	CGACT[ID="LOG.VO3.BUF" ID2="LOG.VO3"+$(@_LC) COPY2=1]
				CGACT[ID=$ID ID2="LOG.VO3"+$(@_LC) COPY2=1]
				CGINFO[ID=$ID SY=1 LET=@LOG.VOICE.SY(3)]

			\BT.ID.ONOVER.GET($BID+"BTN.VOICE", 0)($ID)

				CG[ID="LOG.VO4"+$(@_LC) Z=@Z.LOG E=0 X=@T(21,11)-1000 Y=@T(21,12)+@T(21,32)+@LOG.Y(@_LC) FILE=""]
			//	CGACT[ID="LOG.VO4.BUF" ID2="LOG.VO4"+$(@_LC) COPY2=1]
				CGACT[ID=$ID ID2="LOG.VO4"+$(@_LC) COPY2=1]
				CGINFO[ID=$ID SY=1 LET=@LOG.VOICE.SY(4)]


			\BT.ID.OFF.GET($BID+"BTN.PLATE", 0)($ID)

				CG[ID="LOG.MES.OF"+$(@_LC) Z=@Z.LOG E=1 X=@T(21,11)-1000 Y=@T(21,12)+@T(21,32)+@LOG.Y(@_LC) FILE=""]
				CGACT[ID=$ID ID2="LOG.MES.OF"+$(@_LC) COPY2=1]

			\BT.ID.OVER.GET($BID+"BTN.PLATE", 0)($ID)

				CG[ID="LOG.MES.OV"+$(@_LC) Z=@Z.LOG E=0 X=@T(21,11)-1000 Y=@T(21,12)+@T(21,32)+@LOG.Y(@_LC) FILE=""]
				CGACT[ID=$ID ID2="LOG.MES.OV"+$(@_LC) COPY2=1]

			GOSUB[#=es.LOG.DRAW pint=@_LC pint2=@LOG.CURNO+((@LOG.PAGE.NUM+2)-@_LC) pint3=1] //pint3→一番上のログボイス画像が表示されてしまうバグがあるので表示されないように
		}
		LOOPEND[]

		GOSUB[#=es.LOG.REF]

		\BT.A.SET($BID+"TIP.BG",, @es.GSD(115,10)) //ログ背景不透明度

		///xS
		GOSUB[#=ES.LOG.TYOUSEI]

	//----------------------------------------------------------------
	//フェードイン
	//----------------------------------------------------------------
		\SS.FADE(250)

		@es.STATE=100

	return[]
}

//--------------------------------------------------------------------
//■LOOP
//--------------------------------------------------------------------
#=ES.LOG.LOOP
{
	IF[@es.STATE==100]
	{
		GOSUB[#=ES.LOG.VOICECHECK]
	}
	IFEND[]
	IF[@es.STATE==101]
	{
		GOSUB[#=ES.LOG.QUIT]
	}
	IFEND[]

	return[]
}

//--------------------------------------------------------------------
//■VOICECHECK
//--------------------------------------------------------------------
#=ES.LOG.VOICECHECK
{
	//============================================================ クリックチェック
	INT[@col1]
	INT[@col2]
	INT[@LC]
	INT[@btns]
	INT[@UID]
	LOOP[SET=@LOG.PAGE.NUM+2]
	{
		//@LC=@LOG.LNO(@_LC)
		@LC=@_LC
		@btns=1
		@UID = @LOG.CURNO-(@LOG.Y(@LC)/@LOG.TL.SPACE.Y)+100

	//	IF[@VOICEPLAYFLAG==@LC] @btns=3 IFEND[]
		IF[@VOICEPLAYFLAG==@UID] @btns=3 IFEND[]

		CGINFO[ID="LOG.VO1"+$(@LC) ONMOUSE2=1 LET=@col1]
		CGINFO[ID="LOG.MES.OV"+$(@LC) ONMOUSE2=1 LET=@col2]
		IF[@col1>0 || @col2>0]
		{
			@btns+=1

			IF[@_MOUSE_L==1 || @_MOUSE_L==2]
			{
				IF[@_MOUSE_Y>=@T(21,12) && @_MOUSE_Y<@T(21,12)+(@LOG.TL.SPACE.Y)*@LOG.PAGE.NUM]
				{
					@_MOUSE_L=3

					GOSUB[#=ES.LOG.VOICEPLAY pint=@LC]

					@es.LOG.VOICE.STOP.FLAG=1 //ログを抜けたときにボイスを停止するフラグを立てる.
				}
				IFEND[]
			}
			IFEND[]
		}
		IFEND[]

		GOSUB[#=es.LOG.VO.DRAW pint=@LC pint2=@btns]
	}
	LOOPEND[]

	//============================================================ ボイス再生終了チェック
	IF[@VOICEPLAYFLAG]
	{
		\VO.PCHK
		IF[@_RINT(1)==0] @VOICEPLAYFLAG=0 IFEND[]
	}
	IFEND[]


	return[]
}


#=ES.LOG.VOICEPLAY
{
	INT[@no=@_PINT(1)]
	INT[@UID]
	STR[$fn(11)]

	@UID = @LOG.CURNO-(@LOG.Y(@no)/@LOG.TL.SPACE.Y)+100

//	IF[@VOICEPLAYFLAG!=@no] @VOICEPLAYFLAG=0 IFEND[]
	IF[@VOICEPLAYFLAG!=@UID] @VOICEPLAYFLAG=0 IFEND[]

	IF[@VOICEPLAYFLAG==0]
	{

//\_dmes("NO="+$(@LOG.CURNO-(@LOG.Y(@no)/@LOG.TL.SPACE.Y)))
//\_dmes("NO="+$(@LOG.CURNO+@no))

		@VOICEPLAYFLAG = @UID

		//ボイスファイル名を">"区切りで10個まで文字列分割
		\_strsplit.str($LOG.VO2(@no), ">")
		LOOP[SET=10] $fn(@_LC)=$_RSTR(@_LC) LOOPEND[]

		///xあとで \VO.NL に書き換える
		IF[@es.GSD(111,03)==1] //ボイスループ再生
			\VO1.N($fn(1),,,0)
			\VO2.N($fn(2),,,0)
			\VO3.N($fn(3),,,0)
			\VO4.N($fn(4),,,0)
			\VO5.N($fn(5),,,0)
			\VO6.N($fn(6),,,0)
			\VO7.N($fn(7),,,0)
			\VO8.N($fn(8),,,0)
			\VO9.N($fn(9),,,0)
			\VO10.N($fn(10),,,0)
		ELSE[]
			\VO1.N($fn(1),,,,,1)
			\VO2.N($fn(2),,,,,1)
			\VO3.N($fn(3),,,,,1)
			\VO4.N($fn(4),,,,,1)
			\VO5.N($fn(5),,,,,1)
			\VO6.N($fn(6),,,,,1)
			\VO7.N($fn(7),,,,,1)
			\VO8.N($fn(8),,,,,1)
			\VO9.N($fn(9),,,,,1)
			\VO10.N($fn(10),,,,,1)
		IFEND[]
	}
	ELSE[]
	{
		GOSUB[#=es.VOICE.DEL] // ボイス停止
		//\SVO(,400) // システムボイス停止
		@VOICEPLAYFLAG = 0
	}
	IFEND[]
	return[]
}

//--------------------------------------------------------------------
//■QUIT
//--------------------------------------------------------------------
#=ES.LOG.QUIT
{
	\_gosub($BID+"VoiceStop.1")	//ボイス停止

	IF[$TX.FONT!=""] \_txfont($fonttemp) IFEND[] //フォント元に戻す

	\es.S.RETURN	//戻る

	return[]
}


//-------------------------------------------------------------------------
//■ログシーン終了処理
//-------------------------------------------------------------------------
#=ES.LOG.END
{
	//----------------------------------------------------------------
	// レイヤセット削除
	//----------------------------------------------------------------
		LOOP[SET=@LOG.PAGE.NUM+2]
		{
			CGEND[ID="LOG.VO1"+$(@_LC)]
			CGEND[ID="LOG.VO2"+$(@_LC)]
			CGEND[ID="LOG.VO3"+$(@_LC)]
			CGEND[ID="LOG.VO4"+$(@_LC)]
			CGEND[ID="LOG.MES.OF"+$(@_LC)]
			CGEND[ID="LOG.MES.OV"+$(@_LC)]

			CGEND[ID="LOGTX"+$(@_LC)]
		}
		LOOPEND[]
//		CGEND[ID=LOG/]


		\NM.DEL(11)
		\NM.DEL(12)

	return[]
}

//シナリオ終了時
#=ES.LOG.FIN
{
//	CGEND[ID=LOG/]

	IF[@es.ERISOFFMODE==0]
		GOSUB[#=es.LOG.CLEAR] //バックログデータ消去
	IFEND[]

	return[]
}


//-------------------------------------------------------------------------
//■↓移動
//@_PINT(1):1なら1フレームウェイト入れる
//@_PINT(2):1なら描画しない
//-------------------------------------------------------------------------
#=ES.LOG.Down
{
	IF[@LOG.CURNO < @LOG.NUM-1]
	{
		INT[@LOG.CURNO.SRC = @LOG.CURNO]

		@LOG.CURNO += 1

		INT[@Temp = @LOG.LNO(@LOG.PAGE.NUM+2)]
		LOOP[SET=(@LOG.PAGE.NUM+2)-1] @LOG.LNO((@LOG.PAGE.NUM+2)+1-@_LC) = @LOG.LNO((@LOG.PAGE.NUM+2)-@_LC) LOOPEND[]
		@LOG.LNO(1) = @Temp

		@LOG.Y( @LOG.LNO(1) ) = (-2) * @LOG.TL.SPACE.Y

		CGACT[ID="LOGTX"+$(@LOG.LNO(1)) RECTPAINT3=1 SET=@es.COL.CLEAR]

		IF[@_PINT(2)!=1]
		{
			GOSUB[#=es.LOG.DRAW pint=@LOG.LNO(1) pint2=@LOG.CURNO.SRC+(@LOG.PAGE.NUM+2)]
		GOSUB[#=ES.LOG.Move pint=1 pint2=@_PINT(1)]
		}
		IFEND[]

	}
	IFEND[]

	return[]
}


//-------------------------------------------------------------------------
//■↑移動
//@_PINT(1):1なら1フレームウェイト入れる
//@_PINT(2):1なら描画しない
//-------------------------------------------------------------------------
#=ES.LOG.Up
{
	IF[@LOG.CURNO > -(@LOG.PAGE.NUM)+1]
	{
		INT[@LOG.CURNO.SRC = @LOG.CURNO]

		@LOG.CURNO -= 1

		INT[@Temp = @LOG.LNO(1)]
		LOOP[SET=(@LOG.PAGE.NUM+2)-1] @LOG.LNO(@_LC) = @LOG.LNO(@_LC+1) LOOPEND[]
		@LOG.LNO(@LOG.PAGE.NUM+2) = @Temp

		@LOG.Y( @LOG.LNO(@LOG.PAGE.NUM+2) ) = ((@LOG.PAGE.NUM+2)-1) * @LOG.TL.SPACE.Y

		CGACT[ID="LOGTX"+$(@LOG.LNO(@LOG.PAGE.NUM+2)) RECTPAINT3=1 SET=@es.COL.CLEAR]

		IF[@_PINT(2)!=1]
		{
			GOSUB[#=es.LOG.DRAW pint=@LOG.LNO(@LOG.PAGE.NUM+2) pint2=@LOG.CURNO.SRC-1]
		GOSUB[#=ES.LOG.Move pint=-1 pint2=@_PINT(1)]
		}
		IFEND[]

	}
	IFEND[]

	return[]
}


//-------------------------------------------------------------------------
//■移動
//@_PINT(2):1なら1フレームウェイト入れる
//-------------------------------------------------------------------------
#=ES.LOG.Move
{
	INT[@mLC]
	INT[@y0]INT[@y1]INT[@y2]INT[@y3]INT[@y4]INT[@y5]

	LOOP[SET=@LOG.SCROLL.NUM]
	{
		@mLC=@_LC

		LOOP[SET=@LOG.PAGE.NUM+2]
		{
			@y0 = @LOG.Y( @LOG.LNO(@_LC) ) + (@LOG.TL.SPACE.Y * @mLC / @LOG.SCROLL.NUM) * @_PINT(1)
			@y1 = @y0+@T(21,12)+@T(21,32)
			@y2 = @y0+@T(21,12)
			@y3 = @y0          +@T(21,32)
			@y4 = @LOG.TL.SPACE.Y * @LOG.PAGE.NUM
			@y5 = @y4+@T(21,12)

			CG[ID="LOG.MES.OF"+$(@LOG.LNO(@_LC)) Y=@y1]
			CG[ID="LOG.MES.OV"+$(@LOG.LNO(@_LC)) Y=@y1]

			CG[ID="LOGTX" +$(@LOG.LNO(@_LC)) X=@LOG.TL.X Y=@y2 E=1]
			CG[ID="LOG.VO1"+$(@LOG.LNO(@_LC)) Y=@y1 E=1]
			CG[ID="LOG.VO2"+$(@LOG.LNO(@_LC)) Y=@y1 E=0]
			CG[ID="LOG.VO3"+$(@LOG.LNO(@_LC)) Y=@y1 E=0]
			CG[ID="LOG.VO4"+$(@LOG.LNO(@_LC)) Y=@y1 E=0]

			\BT.ID.OFF.GET($BID+"BTN.VOICE", 0) CGACT[ID=$_RSTR(1) ID2="LOG.VO1"+$(@LOG.LNO(@_LC)) COPY2=1]
			\BT.ID.OVER.GET($BID+"BTN.VOICE", 0) CGACT[ID=$_RSTR(1) ID2="LOG.VO2"+$(@LOG.LNO(@_LC)) COPY2=1]
			\BT.ID.ON.GET($BID+"BTN.VOICE", 0) CGACT[ID=$_RSTR(1) ID2="LOG.VO3"+$(@LOG.LNO(@_LC)) COPY2=1]
			\BT.ID.ONOVER.GET($BID+"BTN.VOICE", 0) CGACT[ID=$_RSTR(1) ID2="LOG.VO4"+$(@LOG.LNO(@_LC)) COPY2=1]

			IF[0 > @y3]
			{
				CGACT[ID="LOG.VO1"+$(@LOG.LNO(@_LC)) RECTPAINT2=1 SET=0 Y=0 Y2=-@y3]
				CGACT[ID="LOG.VO2"+$(@LOG.LNO(@_LC)) RECTPAINT2=1 SET=0 Y=0 Y2=-@y3]
				CGACT[ID="LOG.VO3"+$(@LOG.LNO(@_LC)) RECTPAINT2=1 SET=0 Y=0 Y2=-@y3]
				CGACT[ID="LOG.VO4"+$(@LOG.LNO(@_LC)) RECTPAINT2=1 SET=0 Y=0 Y2=-@y3]
			}
			IFEND[]

			IF[@y4 - @LOG.VOICE.SY(1) < @y3] CGACT[ID="LOG.VO1"+$(@LOG.LNO(@_LC)) RECTPAINT2=1 SET=0 Y=@y5-@y1 Y2=9999] IFEND[]
			IF[@y4 - @LOG.VOICE.SY(2) < @y3] CGACT[ID="LOG.VO2"+$(@LOG.LNO(@_LC)) RECTPAINT2=1 SET=0 Y=@y5-@y1 Y2=9999] IFEND[]
			IF[@y4 - @LOG.VOICE.SY(3) < @y3] CGACT[ID="LOG.VO3"+$(@LOG.LNO(@_LC)) RECTPAINT2=1 SET=0 Y=@y5-@y1 Y2=9999] IFEND[]
			IF[@y4 - @LOG.VOICE.SY(4) < @y3] CGACT[ID="LOG.VO4"+$(@LOG.LNO(@_LC)) RECTPAINT2=1 SET=0 Y=@y5-@y1 Y2=9999] IFEND[]
		}
		LOOPEND[]

		IF[@mLC<@LOG.SCROLL.NUM && @_PINT(2)==1] WAIT[FRAME=1] IFEND[]
	}
	LOOPEND[]

	LOOP[SET=@LOG.PAGE.NUM+2]
	{
	//	@LOG.Y( @LOG.LNO(@_LC) ) += (@LOG.TL.SPACE.Y / @LOG.SCROLL.NUM) * @_PINT(1)
		@LOG.Y( @LOG.LNO(@_LC) ) += @LOG.TL.SPACE.Y * @_PINT(1)
	}
	LOOPEND[]

	///xS
	GOSUB[#=ES.LOG.TYOUSEI]


	return[]
}

///xS
#=ES.LOG.TYOUSEI
{
	CG[ID="LOG.MES.OF"+$(@LOG.LNO(              1)) Y=-10000]
	CG[ID="LOG.MES.OV"+$(@LOG.LNO(              1)) Y=-10000]
	CG[ID="LOG.MES.OF"+$(@LOG.LNO(@LOG.PAGE.NUM+2)) Y=-10000]
	CG[ID="LOG.MES.OV"+$(@LOG.LNO(@LOG.PAGE.NUM+2)) Y=-10000]
	CG[ID="LOGTX"  +$(@LOG.LNO(              1)) Y=-10000]
	CG[ID="LOGTX"  +$(@LOG.LNO(@LOG.PAGE.NUM+2)) Y=-10000]
	CG[ID="LOG.VO1"+$(@LOG.LNO(              1)) Y=-10000]
	CG[ID="LOG.VO1"+$(@LOG.LNO(@LOG.PAGE.NUM+2)) Y=-10000]
	CG[ID="LOG.VO2"+$(@LOG.LNO(              1)) Y=-10000]
	CG[ID="LOG.VO2"+$(@LOG.LNO(@LOG.PAGE.NUM+2)) Y=-10000]
	CG[ID="LOG.VO3"+$(@LOG.LNO(              1)) Y=-10000]
	CG[ID="LOG.VO3"+$(@LOG.LNO(@LOG.PAGE.NUM+2)) Y=-10000]
	CG[ID="LOG.VO4"+$(@LOG.LNO(              1)) Y=-10000]
	CG[ID="LOG.VO4"+$(@LOG.LNO(@LOG.PAGE.NUM+2)) Y=-10000]

	return[]
}


//-------------------------------------------------------------------------
//■
//-------------------------------------------------------------------------
#=es.LOG.REF
{
	INT[@y]
	INT[@sy]
	INT[@val1=-(@LOG.PAGE.NUM)+1] //ex:-4
	INT[@val2=@LOG.NUM-1]  //ex:54
	INT[@val3=@val2-@val1] //ex:0〜50

	\BT.SLIDE.SY.GET($BID+"BTN.SLIDER")(@sy) //ボタンスライドサイズ取得
	@y = @sy - (@sy * (@LOG.CURNO+@LOG.PAGE.NUM-1) / @val3)
	\BT.SLIDE.Y.SET($BID+"BTN.SLIDER",, @y) //ボタンスライド座標セット

	return[]
}

//-------------------------------------------------------------------------
//■ログテキスト表示
//-------------------------------------------------------------------------
#=es.LOG.DRAW
{
	INT[@lno=@_PINT(1)]
	INT[@bno=@_PINT(2)]
	INT[@flg=@_PINT(3)]

	CG[ID="LOG.VO1"+$(@lno) X=-1000]
	CG[ID="LOG.VO2"+$(@lno) X=-1000]
	CG[ID="LOG.VO3"+$(@lno) X=-1000]
	CG[ID="LOG.VO4"+$(@lno) X=-1000]
	CG[ID="LOG.MES.OF"+$(@lno) X=-1000]
	CG[ID="LOG.MES.OV"+$(@lno) X=-1000]

	INT[@mX = @T(21,11) + @T(21,31)]

	IF[@bno>=1 && @bno<=@LOG.PAGE.MAX]
	{
		IF[$LOG.TX(@bno)!=""]
			CG[ID="LOG.MES.OF"+$(@lno) X=@mX+@logw.x]
			CG[ID="LOG.MES.OV"+$(@lno) X=-10000]
		IFEND[]

		//ボイス有りなら
		\_strsplit.str($LOG.VO(@bno), ">")
		IF[$_RSTR(1)!=""]
			CG[ID="LOG.VO1"+$(@lno) X=@mX]
			CG[ID="LOG.VO2"+$(@lno) X=@mX]
			CG[ID="LOG.VO3"+$(@lno) X=@mX]
			CG[ID="LOG.VO4"+$(@lno) X=@mX]

			CG[ID="LOG.MES.OV"+$(@lno) X=@mX+@logw.x]

			IF[@lno==1 && @flg==1]
				CGACT[ID="LOG.VO1"+$(@LOG.LNO(@_LC)) RECTPAINT2=1 SET=0]
				CGACT[ID="LOG.VO2"+$(@LOG.LNO(@_LC)) RECTPAINT2=1 SET=0]
				CGACT[ID="LOG.VO3"+$(@LOG.LNO(@_LC)) RECTPAINT2=1 SET=0]
				CGACT[ID="LOG.VO4"+$(@LOG.LNO(@_LC)) RECTPAINT2=1 SET=0]
			IFEND[]
		IFEND[]


		//-----------------------------------------------------------------
		// 名前表示
		//-----------------------------------------------------------------
			IF[$LOG.TX.NAME(@bno)!=""]
			{
				IF[@T(36,51)==1] @NAMEFLAG=1 IFEND[]
				GOSUB[#=es.TX.SETTASK pstr=$LOG.TX.NAME(@bno)]
				GOSUB[#=es.LOG.DRAWMAIN pstr=$LOG.TX.NAME(@bno) pstr2=$_RSTR(1) pint3=0 pint4=@lno]
			}
			IFEND[]

		//-----------------------------------------------------------------
		// テキスト表示
		//-----------------------------------------------------------------
			GOSUB[#=es.LOG.DRAWMAIN pstr=$LOG.TX(@bno) pstr2=$LOG.TX.TASK(@bno) pint3=1 pint4=@lno]


		$LOG.VO2(@lno)=$LOG.VO(@bno)

	}
	IFEND[]

	@NAMEFLAG=0

	return[]
}

//--------------------------------------------------------------------
//■ボイスボタン、メッセージウィンドウボタン表示
//--------------------------------------------------------------------
#=es.LOG.VO.DRAW
{
	CG[ID="LOG.VO1"+$(@_PINT(1)) E=(@_PINT(2)==1)]
	CG[ID="LOG.VO2"+$(@_PINT(1)) E=(@_PINT(2)==2)]
	CG[ID="LOG.VO3"+$(@_PINT(1)) E=(@_PINT(2)==3)]
	CG[ID="LOG.VO4"+$(@_PINT(1)) E=(@_PINT(2)==4)]
	CG[ID="LOG.MES.OF"+$(@_PINT(1)) E=(@_PINT(2)<=1)]
	CG[ID="LOG.MES.OV"+$(@_PINT(1)) E=(@_PINT(2)>=2)]
	return[]
}


//-------------------------------------------------------------------------
//■ログテキスト表示メイン
//$_PSTR(1) : 描画文字列
//$_PSTR(2) : 描画文字列タスク
//@_PINT(3) : 表示開始行
//@_PINT(4) : lno
//-------------------------------------------------------------------------
#=es.LOG.DRAWMAIN
{
	STR[$str=$_PSTR(1)]
	STR[$strtask=$_PSTR(2)]

	\_strlen($strtask)
	INT[@len=@_RINT(1)]

	INT[@hx = 0]
	INT[@hy = (@LOG.TX.SY + @LOG.TX.SPACE.Y) * @_PINT(3)]
	INT[@pos=1]

	INT[@lno=@_PINT(4)]

	STR[$one]
	INT[@charSX]

	LOOP[SET=@len]
	{
		IF[@hx + @LOG.TX.SX + @LOG.TX.SPACE.X >= @LOG.TL.SX - 10]
		{
			//行頭禁則チェック ///x
			//

			//行末禁則チェック ///x
			//

			//ぶら下げ文字チェック
			//
			\_strmid($str, @_LC, 1)
		//	IF[$_RSTR(1)=="、" || $_RSTR(1)=="。" || $_RSTR(1)=="，" || $_RSTR(1)=="．"]
			IF[$_RSTR(1)=="、" || $_RSTR(1)=="。" || $_RSTR(1)=="，" || $_RSTR(1)=="．" || $_RSTR(1)=="」" || $_RSTR(1)=="』" || $_RSTR(1)=="）"] ///x後ろ３つ暫定.いずれ行頭禁則へ.
			{
				IF[@hx + @LOG.TX.SX + @LOG.TX.SPACE.X >= @LOG.TL.SX - 10]
					@hx = 0
					@hy += @LOG.TX.SY + @LOG.TX.SPACE.Y
					IF[@hy + @LOG.TX.SY + @LOG.TX.SPACE.Y >= @LOG.TL.SY - 10] LOOPBREAK[] IFEND[]

					IF[@NAMEFLAG==1] @hx += @LOG.TX.SX + @LOG.TX.SPACE.X IFEND[]

				IFEND[]
				//LOOPCONTINUE[]
				//\_dmes(禁則)
			}
			ELSE[]
			{
				@hx = 0
				@hy += @LOG.TX.SY + @LOG.TX.SPACE.Y
				IF[@hy + @LOG.TX.SY + @LOG.TX.SPACE.Y >= @LOG.TL.SY - 10] LOOPBREAK[] IFEND[]

				IF[@NAMEFLAG==1] @hx += @LOG.TX.SX + @LOG.TX.SPACE.X IFEND[]
			}
			IFEND[]

		}
		IFEND[]

		//タスクを調べていく
		\_strmid($strtask, @_LC, 1)($one)
		IF[$one=="R"] //R
		{
			@hx = 0
			@hy += @LOG.TX.SY + @LOG.TX.SPACE.Y
			IF[@hy + @LOG.TX.SY + @LOG.TX.SPACE.Y >= @LOG.TL.SY - 10] LOOPBREAK[] IFEND[]

			IF[@NAMEFLAG==1] @hx += @LOG.TX.SX + @LOG.TX.SPACE.X IFEND[]

			LOOPCONTINUE[]
		}
		ELSE[$one=="1" || $one=="2"] //通常文字
		{
			\_strmid($str, @pos, 1)($one)
			@pos+=1

//IF[@es.GSD(115,15)==1] //グラデ有り
			\FONT.COLOR( @TX.COLOR )
			IF[@es.GSD(115,15)==1] \FONT.COLOR( @TX.COLOR, @TX.COLOR2 ) IFEND[]

			\FONT.SIZE( @LOG.TX.SX, @LOG.TX.SY )
			\FONT.XY(@hx+3, @hy+2+5)
			\FONT.BOLD( @TX.BOLD )
			\FONT.SHADE( @TX.SHADE.X, @TX.SHADE.Y, @TX.SHADE.COLOR )
			\FONT.OUTLINE( @TX.OUTLINE.COLOR )
	//		IF[@es.GSD(115,14)==1] \FONT.BOLD( 1 )											IFEND[]
	//		IF[@es.GSD(115,09)==1] \FONT.SHADE( @TX.SHADE.X, @TX.SHADE.Y, @TX.SHADE.COLOR )	IFEND[]
	//		IF[@es.GSD(115,08)==1] \FONT.OUTLINE( @TX.OUTLINE.COLOR )						IFEND[]

			\FONT.DRAW("LOGTX"+$(@lno), $one)

			//半角か全角か
			\_strtype($one)
			@charSX = @LOG.TX.SX / (3-@_RINT(1))
			@hx += @charSX + @LOG.TX.SPACE.X
		}
		IFEND[]

	}
	LOOPEND[]

	return[]
}


//============================================================================
//■ログ登録処理
//============================================================================
#=es.LOG.W.TX.ONE
{
	IF[@PushFlag] GOSUB[#=es.LOG.PUSH] GOSUB[#=es.LOG.PINIT pint=@LOG.ADDTIMING] IFEND[]

	$LOG.TX(@LOG.ADDTIMING)      += $_PSTR(1) //テキスト
	$LOG.TX.TASK(@LOG.ADDTIMING) += $_PSTR(2) //テキストタスク

	return[]
}

#=es.LOG.W.NM
{
	IF[@PushFlag] GOSUB[#=es.LOG.PUSH] GOSUB[#=es.LOG.PINIT pint=@LOG.ADDTIMING] IFEND[]

	$LOG.TX.NAME(@LOG.ADDTIMING) = $_PSTR(1)	//名前

	return[]
}

#=es.LOG.W.NMTX
{
	IF[@PushFlag] GOSUB[#=es.LOG.PUSH] GOSUB[#=es.LOG.PINIT pint=@LOG.ADDTIMING] IFEND[]

	$LOG.TX.NAME(@LOG.ADDTIMING) = $_PSTR(1) //名前
	$LOG.TX(@LOG.ADDTIMING)      = $_PSTR(2) //テキスト
	$LOG.TX.TASK(@LOG.ADDTIMING) = $_PSTR(3) //テキストタスク

	return[]
}

#=es.LOG.W.NMTXVO
{
	IF[@PushFlag] GOSUB[#=es.LOG.PUSH] GOSUB[#=es.LOG.PINIT pint=@LOG.ADDTIMING] IFEND[]

	$LOG.TX.NAME(@LOG.ADDTIMING) = $_PSTR(1) //名前
	$LOG.TX(@LOG.ADDTIMING)      = $_PSTR(2) //テキスト
	$LOG.TX.TASK(@LOG.ADDTIMING) = $_PSTR(3) //テキストタスク
	$LOG.VO(@LOG.ADDTIMING)      = $_PSTR(4) //ボイス

	return[]
}

#=es.LOG.W.VO
{
	IF[@PushFlag] GOSUB[#=es.LOG.PUSH] GOSUB[#=es.LOG.PINIT pint=@LOG.ADDTIMING] IFEND[]

	$LOG.VO(@LOG.ADDTIMING)      = $_PSTR(1) //ボイス

	return[]
}


#=es.LOG.ADD
{
	IF[$LOG.TX(@LOG.ADDTIMING)!=""] @PushFlag=1 IFEND[]

	IF[@LOG.ADDTIMING==0]
	{
		IF[@PushFlag] GOSUB[#=es.LOG.PUSH] IFEND[]
		GOSUB[#=es.LOG.PINIT pint=@LOG.ADDTIMING]
	}
	IFEND[]

	return[]
}

//配列1以降のを (2=1,3=2,4=3,…) と1つずつずらす.
#=es.LOG.PUSH
{
	VARACT[SET=$LOG.TX()		PUSH=0]
	VARACT[SET=$LOG.TX.NAME()	PUSH=0]
	VARACT[SET=$LOG.TX.TASK()	PUSH=0]
	VARACT[SET=$LOG.VO()		PUSH=0]

	@LOG.NUM+=1
	\_range(@LOG.NUM, 0, @LOG.PAGE.MAX)
	IF[@VOICEPLAYFLAG] @VOICEPLAYFLAG+=1 IFEND[]

	@PushFlag=0

	return[]
}

#=es.LOG.PINIT
{
	$LOG.TX(@_PINT(1)) = ""
	$LOG.TX.NAME(@_PINT(1)) = ""
	$LOG.TX.TASK(@_PINT(1)) = ""
	$LOG.VO(@_PINT(1)) = ""

	return[]
}


//-------------------------------------------------------------------------
//■ログ手動登録
//$_PSTR(1):名前
//$_PSTR(2):テキスト
//-------------------------------------------------------------------------
#=es.LOG.SET
{
	//ログ登録
	GOSUB[#=es.TX.SETTASK pstr=$_PSTR(2)]
	\LOG.W.NMTX($_PSTR(1), $_PSTR(2), $_RSTR(1))
	\LOG.ADD

	//ボイス情報初期化
	GOSUB[#=es.Voice.DataInit]

	return[]
}


//============================================================================
//■ログクリア
//============================================================================
#=es.LOG.CLEAR
{
	LOOP[SET=(\.LOG.SIZE)+1]
	{
		$LOG.TX(@_LC-1)=""
		$LOG.TX.NAME(@_LC-1)=""
		$LOG.TX.TASK(@_LC-1)=""
		$LOG.VO(@_LC-1)=""
	}
	LOOPEND[]

	@LOG.NUM=@LOG.ADDTIMING
	@PushFlag=0
	@VOICEPLAYFLAG=0

	return[]
}


//------------------------------------------------
//■数字画像読込
//------------------------------------------------
#=ES.LOG.Num.Load
{
	\NM.CG($T(21,41))
	\NM.XYZ(@T(21,42), @T(21,43), @Z.NUM)
	\NM.SX(@T(21,44))
	\NM.DIG(@T(21,45), @T(21,46))
	\NM.RANGE(1,@LOG.NUM)
	\NM.SET(11)

	\NM.CG($T(21,47))
	\NM.XYZ(@T(21,48), @T(21,49), @Z.NUM)
	\NM.SX(@T(21,50))
	\NM.DIG(@T(21,51), @T(21,52))
	\NM.SET(12)

	\NM.VAL.SET(11, @LOG.CURNO+@LOG.PAGE.NUM)
	\NM.VAL.SET(12, @LOG.NUM)

	return[]
}

//------------------------------------------------
//■ページ数表示
//------------------------------------------------
#=ES.LOG.Num1
{
	\NM.VAL.SET(11, @LOG.CURNO+@LOG.PAGE.NUM)
	return[]
}


//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//■ボタン処理
//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

//■[OLD]ボタン ------------------------------------------------------
//
#=ES.LOG.BTN.OLD.ON
{
	LOOP[SET=@LOG.PAGE.MAX+@LOG.PAGE.NUM] GOSUB[#=ES.LOG.Down PINT=2] LOOPEND[]
	GOSUB[#=ES.LOG.Num1]

	GOSUB[#=es.LOG.REF]

	return[]
}

//■[BB]ボタン -------------------------------------------------------
//
#=ES.LOG.BTN.BB.ON
{
	\BT.W0(ES.LOG.BTN.BB)

	GOSUB[#=ES.LOG.Down PINT=2]
	GOSUB[#=ES.LOG.Down PINT=2]
///xS:２つ分増やした
	GOSUB[#=ES.LOG.Down PINT=2]
	GOSUB[#=ES.LOG.Down PINT=2]
	GOSUB[#=ES.LOG.Num1]

	GOSUB[#=es.LOG.REF]

//WAIT[FRAME=2]

	\BT.W1(ES.LOG.BTN.BB)

	return[]
}

//■[B]ボタン --------------------------------------------------------
//
#=ES.LOG.BTN.B.ON
{
	\BT.W0(ES.LOG.BTN.B)

	GOSUB[#=ES.LOG.Down PINT=1]
	GOSUB[#=ES.LOG.Num1]

	GOSUB[#=es.LOG.REF]

WAIT[FRAME=2]

	\BT.W1(ES.LOG.BTN.B)

	return[]
}

//■[F]ボタン --------------------------------------------------------
//
#=ES.LOG.BTN.F.ON
{
	\BT.W0(ES.LOG.BTN.F)

	GOSUB[#=ES.LOG.Up PINT=1]
	GOSUB[#=ES.LOG.Num1]

	GOSUB[#=es.LOG.REF]

WAIT[FRAME=2]

	\BT.W1(ES.LOG.BTN.F)

	return[]
}

//■[FF]ボタン -------------------------------------------------------
//
#=ES.LOG.BTN.FF.ON
{
	\BT.W0(ES.LOG.BTN.FF)

	GOSUB[#=ES.LOG.Up PINT=2]
	GOSUB[#=ES.LOG.Up PINT=2]
///xS:２つ分増やした
	GOSUB[#=ES.LOG.Up PINT=2]
	GOSUB[#=ES.LOG.Up PINT=2]
	GOSUB[#=ES.LOG.Num1]

	GOSUB[#=es.LOG.REF]

//WAIT[FRAME=2]

	\BT.W1(ES.LOG.BTN.FF)

	return[]
}

//■[NEW]ボタン ------------------------------------------------------
//
#=ES.LOG.BTN.NEW.ON
{
	LOOP[SET=@LOG.PAGE.MAX+@LOG.PAGE.NUM] GOSUB[#=ES.LOG.Up PINT=2] LOOPEND[]
	GOSUB[#=ES.LOG.Num1]

	GOSUB[#=es.LOG.REF]

	return[]
}

//■[スクロールバー]ボタン -------------------------------------------
//
#=ES.LOG.BTN.GAUGE.ON		//ゲージ
{
	\SLIDER.SYNC($BID+"BTN.SLIDER")
	return[]
}

#=ES.LOG.BTN.SLIDER.DRAG	//スライダー
{
	INT[@val1 = -(@LOG.PAGE.NUM)+1]	//ex:-4
	INT[@val2 = @LOG.NUM-1]			//ex:54
	INT[@val3 = @val2-@val1]		//ex:0〜50

	INT[@sa]

	INT[@per]
//	\BT.SLIDE.PER.GET($BID+"BTN.SLIDER")(@per)	//ツマミの割合を取得(0〜256)
//	@per=256-@per //上下を逆に
	@per=256-@_PINT(2) //上下を逆に
	@val3=@val1+(@val3*@per/256)

//	\DBG.STR(2, "@LOG.CURNO="+$@LOG.CURNO)
//	\DBG.STR(3, "@val1     ="+$@val1)
//	\DBG.STR(4, "@val2     ="+$@val2)
//	\DBG.STR(5, "@val3     ="+$@val3)

	IF[@val3>@LOG.CURNO]
	{
		LOOP[]
		{
			@sa = (@val3 - @LOG.CURNO)
			IF[@sa<0] @sa=-@sa IFEND[]

			GOSUB[#=ES.LOG.Down PINT=2 PINT2=(@sa>10)]
			IF[@val3==@LOG.CURNO] LOOPBREAK[] IFEND[]
		}
		LOOPEND[]
	}
	ELSE[@val3<@LOG.CURNO]
	{
		LOOP[]
		{
			@sa = (@val3 - @LOG.CURNO)
			IF[@sa<0] @sa=-@sa IFEND[]

			GOSUB[#=ES.LOG.Up PINT=2 PINT2=(@sa>10)]
			IF[@val3==@LOG.CURNO] LOOPBREAK[] IFEND[]
		}
		LOOPEND[]
	}
	IFEND[]

	GOSUB[#=ES.LOG.Num1]

	return[]
}

//■[BACK]ボタン -----------------------------------------------------
//
#=ES.LOG.BTN.BACK.ON { @es.STATE=101; return[] }


//////


//--------------------------------------------------------------------
//■(SAVE 暫定)
//--------------------------------------------------------------------
#=es.LOG.SAVE
{
	INT[@No=@_PINT(1)]
	SAVE[DNO=@No   SET=$LOG.TX()]		// 
	SAVE[DNO=@No+1 SET=$LOG.TX.NAME()]	// 
	SAVE[DNO=@No+2 SET=$LOG.TX.TASK()]	// 
	SAVE[DNO=@No+3 SET=$LOG.VO()]		// 
	SAVE[DNO=@No+4 SET=@LOG.NUM]		// 

	return[]
}

//--------------------------------------------------------------------
//■(LOAD 暫定)
//--------------------------------------------------------------------
#=es.LOG.LOAD
{
	STR[$fn=$_PSTR(1)]
	INT[@No=@_PINT(2)]
	LOAD[FILE=$fn DNO=@No   LET=$LOG.TX()]		// 
	LOAD[FILE=$fn DNO=@No+1 LET=$LOG.TX.NAME()]	// 
	LOAD[FILE=$fn DNO=@No+2 LET=$LOG.TX.TASK()]	// 
	LOAD[FILE=$fn DNO=@No+3 LET=$LOG.VO()]		// 
	LOAD[FILE=$fn DNO=@No+4 LET=@LOG.NUM]		// 

	GOSUB[#=es.LOG.BUF.LOADINIT]

	return[]
}

#=es.LOG.BUF.LOADINIT
{
	$LOG.TX(@LOG.ADDTIMING)=""
//	$LOG.TX.NAME(@LOG.ADDTIMING)=""
	$LOG.TX.TASK(@LOG.ADDTIMING)=""
	return[]
}


//////


//△BUF @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//
#=es.LOG.BUF.GET
{
	return[rstr=$LOG.TX(@LOG.ADDTIMING) rstr2=$LOG.TX.NAME(@LOG.ADDTIMING) rstr3=$LOG.TX.TASK(@LOG.ADDTIMING)]
}

